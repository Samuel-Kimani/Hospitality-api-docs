{
  "swagger" : "2.0",
  "externalDocs" : {
    "description" : "Find out more about Oracle Hospitality",
    "url" : "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  },
  "info" : {
    "title" : "OPERA Cloud Sales Event Management API",
    "description" : "APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (http://oss.oracle.com/licenses/upl). Copyright c 2021 Oracle and/or its affiliates.</p>",
    "version" : "21.1",
    "contact" : {
      "email" : "hospitality_apis_ww_grp@oracle.com"
    },
    "license" : {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    },
    "termsOfService" : "https://www.oracle.com/legal/terms.html"
  },
  "schemes" : [ "https" ],
  "basePath" : "/evm/v1",
  "produces" : [ "application/json" ],
  "paths" : {
    "/events" : {
      "get" : {
        "summary" : "Get Events ",
        "description" : "Use this API to retrieve multiple Events for a specific hotel, you can narrow the results using different search criteria such as event eventStartDate and eventEndDate dates, and block name. <p><strong>OperationId:</strong>getEventsMultipleHotels</p>",
        "operationId" : "getEventsMultipleHotels",
        "parameters" : [ {
          "name" : "hotelIds",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "This is the Hotel Code of the Event",
          "items" : {
            "type" : "string",
            "maxItems" : 4000
          },
          "x-example" : [ "BHOTEL", "WORLDHOTEL" ],
          "required" : false
        }, {
          "name" : "eventStartDate",
          "in" : "query",
          "x-example" : "2020-12-30",
          "required" : false,
          "description" : "The starting value of the date range.",
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "eventEndDate",
          "in" : "query",
          "x-example" : "2020-12-30",
          "required" : false,
          "description" : "The ending value of the date range.",
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "blockId",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "Block ID linked to the Catering Event",
          "items" : {
            "type" : "string"
          },
          "x-example" : [ "52346234" ],
          "required" : false
        }, {
          "name" : "eventId",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "Unique ID for the catering event",
          "items" : {
            "type" : "string"
          },
          "x-example" : [ "823814534" ],
          "required" : false
        }, {
          "name" : "attachedProfileId",
          "in" : "query",
          "x-example" : "323816531",
          "required" : false,
          "description" : "A unique identifying numeric value assigned to a profile utilized to fetch events associated to blocks linked to the profile.",
          "type" : "string"
        }, {
          "name" : "eventStatusCodes",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "items" : {
            "type" : "string",
            "maxItems" : 4000
          },
          "x-example" : [ "ACT", "DEF" ],
          "required" : false,
          "description" : "Status Codes associated with the events to be fetched."
        }, {
          "name" : "eventTypeCodes",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "items" : {
            "type" : "string",
            "maxItems" : 4000
          },
          "x-example" : [ "BRK", "COF" ],
          "required" : false,
          "description" : "Event Type Codes associated with the events to be fetched."
        }, {
          "name" : "functionSpaceCodes",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "items" : {
            "type" : "string",
            "maxItems" : 4000
          },
          "x-example" : [ "SPACE01", "SPACE02" ],
          "required" : false
        }, {
          "name" : "includeInactive",
          "in" : "query",
          "default" : false,
          "x-example" : false,
          "required" : false,
          "description" : "Indicates whether to include inactive events in search result.",
          "type" : "boolean"
        }, {
          "name" : "includeAlternateEvents",
          "in" : "query",
          "default" : false,
          "x-example" : false,
          "required" : false,
          "description" : "Indicates whether to include the alternate events in the search result.",
          "type" : "boolean"
        }, {
          "name" : "includeSubEvents",
          "in" : "query",
          "default" : false,
          "x-example" : false,
          "required" : false,
          "description" : "Indicates whether to include the sub events in the search result.",
          "type" : "boolean"
        }, {
          "name" : "cateringEventOrderBy",
          "in" : "query",
          "default" : "StartDateTimeAsc",
          "x-example" : "StartDateTimeAsc",
          "required" : false,
          "type" : "string",
          "description" : "A collection of supported list of order by for search catering events.",
          "uniqueItems" : true,
          "enum" : [ "StartDateTimeAsc", "StartDateTimeMasterSubAsc" ]
        }, {
          "name" : "fetchInstructions",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "Instructions to fetch details information about the selected event. The BlocksInfo fetch instructions will retain a limited amount of data for the associated block.  The Indicators instruction will provide a count.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "EventDetails", "BlocksInfo", "Indicators", "Notes", "SubEventsInfo", "AlternateEventsInfo", "MasterEventInfo", "Revenues", "IncludeInactiveSubEventsInfo", "IncludeInactiveMasterEventInfo", "ActualEventDetails", "EligibleMasterEventDetails" ]
          },
          "x-example" : [ "Indicators" ],
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "default" : 200,
          "x-example" : 200,
          "required" : false,
          "description" : "Indicates maximum number of records a Web Service should return.",
          "type" : "integer"
        }, {
          "name" : "offset",
          "in" : "query",
          "default" : 0,
          "x-example" : 0,
          "required" : false,
          "description" : "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type" : "integer"
        }, {
          "$ref" : "#/parameters/authKey"
        }, {
          "$ref" : "#/parameters/x-app-key"
        }, {
          "$ref" : "#/parameters/x-hotelid"
        }, {
          "$ref" : "#/parameters/x-externalsystem"
        }, {
          "$ref" : "#/parameters/Accept-Language"
        } ],
        "responses" : {
          "200" : {
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              }
            },
            "description" : "Response object for fetching events.",
            "schema" : {
              "$ref" : "#/definitions/events"
            },
            "examples" : {
              "application/json" : {
                "eventSummaries" : {
                  "eventSummary" : [ {
                    "eventId" : {
                      "id" : "121294"
                    },
                    "blockIdList" : [ {
                      "id" : "18450"
                    } ],
                    "blockName" : "ACME Convention",
                    "attendees" : "10",
                    "eventStatus" : {
                      "status" : {
                        "code" : "INQ",
                        "description" : "Inquiry"
                      },
                      "color" : "Cyan"
                    },
                    "cateringStatusType" : "Inquiry",
                    "cateringStatusDeductInventory" : false,
                    "cateringStatusReturnToInventory" : false,
                    "masterEvent" : true,
                    "subEvent" : false,
                    "packageEvent" : true,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "doorCard" : "ACME Convention",
                    "excludeFromForecast" : false,
                    "useForecastRevenue" : true,
                    "loudEvent" : false,
                    "eventShared" : false,
                    "shareable" : false,
                    "packageCode" : "MTGBRK",
                    "packageName" : "Meeting Break Package",
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TAIPEI",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : false,
                    "eventStartDate" : "2014-10-07 09:00:00.0",
                    "eventEndDate" : "2014-10-07 18:00:00.0",
                    "type" : "MTG",
                    "eventName" : "Meeting",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "USD"
                  }, {
                    "eventId" : {
                      "id" : "108541"
                    },
                    "eventLink" : {
                      "id" : {
                        "id" : "1090"
                      },
                      "type" : "SubEvent",
                      "masterEventDates" : {
                        "startDateTime" : "2015-12-05 12:00:00.0",
                        "endDateTime" : "2015-12-05 13:00:00.0"
                      }
                    },
                    "blockIdList" : [ {
                      "id" : "11298"
                    } ],
                    "blockName" : "The Convention",
                    "attendees" : "1",
                    "functionSpaceCode" : {
                      "code" : "ANNA",
                      "description" : "Annapolis Room"
                    },
                    "rentalAmount" : "20",
                    "functionSpaceSetup" : {
                      "code" : "BOA",
                      "description" : "Boardroom Style"
                    },
                    "eventStatus" : {
                      "status" : {
                        "code" : "DEF",
                        "description" : "Definite-1"
                      },
                      "color" : "Red"
                    },
                    "cateringStatusDeductInventory" : true,
                    "cateringStatusReturnToInventory" : false,
                    "setupTime" : "5",
                    "tearDownTime" : "5",
                    "masterEvent" : false,
                    "subEvent" : true,
                    "packageEvent" : false,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "excludeFromForecast" : false,
                    "useForecastRevenue" : true,
                    "loudEvent" : false,
                    "rentalCode" : "FULL",
                    "eventShared" : false,
                    "shareable" : false,
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TOKYO",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : false,
                    "eventStartDate" : "2015-12-05 09:00:00.0",
                    "eventEndDate" : "2015-12-05 18:00:00.0",
                    "type" : "MTG",
                    "eventName" : "Meeting",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "USD"
                  }, {
                    "eventId" : {
                      "id" : "1090"
                    },
                    "blockIdList" : [ {
                      "id" : "11298"
                    } ],
                    "blockName" : "The Convention",
                    "attendees" : "1",
                    "eventStatus" : {
                      "status" : {
                        "code" : "DEF",
                        "description" : "Definite-1"
                      },
                      "color" : "Red"
                    },
                    "cateringStatusDeductInventory" : true,
                    "cateringStatusReturnToInventory" : false,
                    "masterEvent" : true,
                    "subEvent" : false,
                    "packageEvent" : false,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "doorCard" : "The Convention",
                    "excludeFromForecast" : false,
                    "useForecastRevenue" : false,
                    "loudEvent" : false,
                    "eventShared" : false,
                    "shareable" : false,
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TOKYO",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : false,
                    "eventStartDate" : "2015-12-05 12:00:00.0",
                    "eventEndDate" : "2015-12-05 13:00:00.0",
                    "type" : "LUN",
                    "eventName" : "Lunch",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "USD"
                  }, {
                    "eventId" : {
                      "type" : "EventId",
                      "idContext" : "OPERA",
                      "id" : "401315"
                    },
                    "blockIdList" : [ {
                      "id" : "251730",
                      "type" : "Block"
                    } ],
                    "blockName" : "27 issue",
                    "attendees" : "11",
                    "functionSpaceDetails" : {
                      "code" : "ANNA",
                      "description" : "Annapolis Room"
                    },
                    "rentalAmount" : "122",
                    "functionSpaceSetup" : {
                      "code" : "CON",
                      "description" : "Conference"
                    },
                    "eventStatus" : {
                      "status" : {
                        "code" : "ACT",
                        "description" : "Actual"
                      },
                      "color" : "Brown"
                    },
                    "cateringStatusType" : "Actual",
                    "cateringStatusDeductInventory" : true,
                    "cateringStatusReturnToInventory" : false,
                    "setupTime" : "0",
                    "tearDownTime" : "0",
                    "masterEvent" : false,
                    "subEvent" : false,
                    "packageEvent" : false,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "doorCard" : "27 issue",
                    "excludeFromForecast" : false,
                    "minimumOccupancy" : "1",
                    "maximumOccupancy" : "55",
                    "loudEvent" : false,
                    "rentalCode" : "CMP",
                    "eventShared" : false,
                    "shareable" : false,
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TOKYO",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : true,
                    "eventStartDate" : "2017-01-06 09:00:00.0",
                    "eventEndDate" : "2017-01-06 18:00:00.0",
                    "type" : "MTG",
                    "eventName" : "Meeting",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "EUR"
                  } ],
                  "totalPages" : "1000",
                  "offset" : "4",
                  "limit" : "4",
                  "hasMore" : false,
                  "totalResults" : "1000"
                }
              }
            }
          },
          "204" : {
            "description" : "EventsMultipleHotels not found."
          },
          "400" : {
            "$ref" : "#/responses/400"
          },
          "401" : {
            "$ref" : "#/responses/401"
          },
          "403" : {
            "$ref" : "#/responses/403"
          },
          "404" : {
            "$ref" : "#/responses/404"
          },
          "405" : {
            "$ref" : "#/responses/405"
          },
          "406" : {
            "$ref" : "#/responses/406"
          },
          "413" : {
            "$ref" : "#/responses/413"
          },
          "414" : {
            "$ref" : "#/responses/414"
          },
          "415" : {
            "$ref" : "#/responses/415"
          },
          "500" : {
            "$ref" : "#/responses/500"
          },
          "502" : {
            "$ref" : "#/responses/502"
          },
          "503" : {
            "$ref" : "#/responses/503"
          }
        },
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "tags" : [ "EventManagement" ]
      }
    },
    "/hotels/{hotelId}/events" : {
      "get" : {
        "summary" : "Get Events ",
        "description" : "Use this API to retrieve multiple Events for a specific hotel, you can narrow the results using different search criteria such as event eventStartDate and eventEndDate dates, and block name. <p><strong>OperationId:</strong>getEventsOneHotel</p>",
        "operationId" : "getEventsOneHotel",
        "parameters" : [ {
          "name" : "hotelId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 20,
          "description" : "Unique ID of a hotel",
          "x-example" : "BHOTEL"
        }, {
          "name" : "eventStartDate",
          "in" : "query",
          "x-example" : "2020-12-30",
          "required" : false,
          "description" : "The starting value of the date range.",
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "eventEndDate",
          "in" : "query",
          "x-example" : "2020-12-30",
          "required" : false,
          "description" : "The ending value of the date range.",
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "blockId",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "Block ID linked to the Catering Event",
          "items" : {
            "type" : "string"
          },
          "required" : false
        }, {
          "name" : "eventId",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "Unique ID for the catering event",
          "items" : {
            "type" : "string"
          },
          "x-example" : [ "823814534" ],
          "required" : false
        }, {
          "name" : "attachedProfileId",
          "in" : "query",
          "x-example" : "323816531",
          "required" : false,
          "description" : "A unique identifying numeric value assigned to a profile utilized to fetch events associated to blocks linked to the profile.",
          "type" : "string"
        }, {
          "name" : "eventStatusCodes",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "items" : {
            "type" : "string",
            "maxItems" : 4000
          },
          "x-example" : [ "ACT", "DEF" ],
          "required" : false,
          "description" : "Status Codes associated with the events to be fetched."
        }, {
          "name" : "eventTypeCodes",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "items" : {
            "type" : "string",
            "maxItems" : 4000
          },
          "x-example" : [ "BRK", "COF" ],
          "required" : false,
          "description" : "Event Type Codes associated with the events to be fetched."
        }, {
          "name" : "functionSpaceCodes",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "items" : {
            "type" : "string",
            "maxItems" : 4000
          },
          "x-example" : [ "SPACE01", "SPACE02" ],
          "required" : false
        }, {
          "name" : "includeInactive",
          "in" : "query",
          "default" : false,
          "x-example" : false,
          "required" : false,
          "description" : "Indicates whether to include inactive events in search result.",
          "type" : "boolean"
        }, {
          "name" : "includeAlternateEvents",
          "in" : "query",
          "default" : false,
          "x-example" : false,
          "required" : false,
          "description" : "Indicates whether to include the alternate events in the search result.",
          "type" : "boolean"
        }, {
          "name" : "includeSubEvents",
          "in" : "query",
          "default" : false,
          "x-example" : false,
          "required" : false,
          "description" : "Indicates whether to include the sub events in the search result.",
          "type" : "boolean"
        }, {
          "name" : "cateringEventOrderBy",
          "in" : "query",
          "default" : "StartDateTimeAsc",
          "x-example" : "StartDateTimeAsc",
          "required" : false,
          "type" : "string",
          "description" : "A collection of supported list of order by for search catering events.",
          "uniqueItems" : true,
          "enum" : [ "StartDateTimeAsc", "StartDateTimeMasterSubAsc" ]
        }, {
          "name" : "fetchInstructions",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "Instruction to fetch all eligible master events for the selected event",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "EventDetails", "BlocksInfo", "Indicators", "Notes", "SubEventsInfo", "AlternateEventsInfo", "MasterEventInfo", "Revenues", "IncludeInactiveSubEventsInfo", "IncludeInactiveMasterEventInfo", "ActualEventDetails", "EligibleMasterEventDetails" ]
          },
          "x-example" : [ "Indicators" ],
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "default" : 200,
          "x-example" : 200,
          "required" : false,
          "description" : "Indicates maximum number of records a Web Service should return.",
          "type" : "integer"
        }, {
          "name" : "offset",
          "in" : "query",
          "default" : 0,
          "x-example" : 0,
          "required" : false,
          "description" : "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type" : "integer"
        }, {
          "$ref" : "#/parameters/authKey"
        }, {
          "$ref" : "#/parameters/x-app-key"
        }, {
          "$ref" : "#/parameters/x-hotelid"
        }, {
          "$ref" : "#/parameters/x-externalsystem"
        }, {
          "$ref" : "#/parameters/Accept-Language"
        } ],
        "responses" : {
          "200" : {
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              }
            },
            "description" : "Response object for fetching events.",
            "schema" : {
              "$ref" : "#/definitions/events"
            },
            "examples" : {
              "application/json" : {
                "eventSummaries" : {
                  "eventSummary" : [ {
                    "eventId" : {
                      "id" : "121294"
                    },
                    "blockIdList" : [ {
                      "id" : "18450"
                    } ],
                    "blockName" : "ACME Convention",
                    "attendees" : "10",
                    "eventStatus" : {
                      "status" : {
                        "code" : "INQ",
                        "description" : "Inquiry"
                      },
                      "color" : "Cyan"
                    },
                    "cateringStatusType" : "Inquiry",
                    "cateringStatusDeductInventory" : false,
                    "cateringStatusReturnToInventory" : false,
                    "masterEvent" : true,
                    "subEvent" : false,
                    "packageEvent" : true,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "doorCard" : "ACME Convention",
                    "excludeFromForecast" : false,
                    "useForecastRevenue" : true,
                    "loudEvent" : false,
                    "eventShared" : false,
                    "shareable" : false,
                    "packageCode" : "MTGBRK",
                    "packageName" : "Meeting Break Package",
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TAIPEI",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : false,
                    "eventStartDate" : "2014-10-07 09:00:00.0",
                    "eventEndDate" : "2014-10-07 18:00:00.0",
                    "type" : "MTG",
                    "eventName" : "Meeting",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "USD"
                  }, {
                    "eventId" : {
                      "id" : "108541"
                    },
                    "eventLink" : {
                      "id" : {
                        "id" : "1090"
                      },
                      "type" : "SubEvent",
                      "masterEventDates" : {
                        "startDateTime" : "2015-12-05 12:00:00.0",
                        "endDateTime" : "2015-12-05 13:00:00.0"
                      }
                    },
                    "blockIdList" : [ {
                      "id" : "11298"
                    } ],
                    "blockName" : "The Convention",
                    "attendees" : "1",
                    "functionSpaceCode" : {
                      "code" : "ANNA",
                      "description" : "Annapolis Room"
                    },
                    "rentalAmount" : "20",
                    "functionSpaceSetup" : {
                      "code" : "BOA",
                      "description" : "Boardroom Style"
                    },
                    "eventStatus" : {
                      "status" : {
                        "code" : "DEF",
                        "description" : "Definite-1"
                      },
                      "color" : "Red"
                    },
                    "cateringStatusDeductInventory" : true,
                    "cateringStatusReturnToInventory" : false,
                    "setupTime" : "5",
                    "tearDownTime" : "5",
                    "masterEvent" : false,
                    "subEvent" : true,
                    "packageEvent" : false,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "excludeFromForecast" : false,
                    "useForecastRevenue" : true,
                    "loudEvent" : false,
                    "rentalCode" : "FULL",
                    "eventShared" : false,
                    "shareable" : false,
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TOKYO",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : false,
                    "eventStartDate" : "2015-12-05 09:00:00.0",
                    "eventEndDate" : "2015-12-05 18:00:00.0",
                    "type" : "MTG",
                    "eventName" : "Meeting",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "USD"
                  }, {
                    "eventId" : {
                      "id" : "1090"
                    },
                    "blockIdList" : [ {
                      "id" : "11298"
                    } ],
                    "blockName" : "The Convention",
                    "attendees" : "1",
                    "eventStatus" : {
                      "status" : {
                        "code" : "DEF",
                        "description" : "Definite-1"
                      },
                      "color" : "Red"
                    },
                    "cateringStatusDeductInventory" : true,
                    "cateringStatusReturnToInventory" : false,
                    "masterEvent" : true,
                    "subEvent" : false,
                    "packageEvent" : false,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "doorCard" : "The Convention",
                    "excludeFromForecast" : false,
                    "useForecastRevenue" : false,
                    "loudEvent" : false,
                    "eventShared" : false,
                    "shareable" : false,
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TOKYO",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : false,
                    "eventStartDate" : "2015-12-05 12:00:00.0",
                    "eventEndDate" : "2015-12-05 13:00:00.0",
                    "type" : "LUN",
                    "eventName" : "Lunch",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "USD"
                  }, {
                    "eventId" : {
                      "type" : "EventId",
                      "idContext" : "OPERA",
                      "id" : "401315"
                    },
                    "blockIdList" : [ {
                      "id" : "251730",
                      "type" : "Block"
                    } ],
                    "blockName" : "27 issue",
                    "attendees" : "11",
                    "functionSpaceDetails" : {
                      "code" : "ANNA",
                      "description" : "Annapolis Room"
                    },
                    "rentalAmount" : "122",
                    "functionSpaceSetup" : {
                      "code" : "CON",
                      "description" : "Conference"
                    },
                    "eventStatus" : {
                      "status" : {
                        "code" : "ACT",
                        "description" : "Actual"
                      },
                      "color" : "Brown"
                    },
                    "cateringStatusType" : "Actual",
                    "cateringStatusDeductInventory" : true,
                    "cateringStatusReturnToInventory" : false,
                    "setupTime" : "0",
                    "tearDownTime" : "0",
                    "masterEvent" : false,
                    "subEvent" : false,
                    "packageEvent" : false,
                    "alternateEvent" : false,
                    "displayDoorCard" : true,
                    "doorCard" : "27 issue",
                    "excludeFromForecast" : false,
                    "minimumOccupancy" : "1",
                    "maximumOccupancy" : "55",
                    "loudEvent" : false,
                    "rentalCode" : "CMP",
                    "eventShared" : false,
                    "shareable" : false,
                    "hotelId" : "TOKYO",
                    "blockHotelCode" : "TOKYO",
                    "hasPostings" : false,
                    "blockHasPostings" : false,
                    "hasPartialPostings" : false,
                    "allPosted" : false,
                    "nothingPosted" : true,
                    "eventStartDate" : "2017-01-06 09:00:00.0",
                    "eventEndDate" : "2017-01-06 18:00:00.0",
                    "type" : "MTG",
                    "eventName" : "Meeting",
                    "cateringCurrency" : "USD",
                    "cateringQuotedCurrency" : "EUR"
                  } ],
                  "totalPages" : "1000",
                  "offset" : "4",
                  "limit" : "4",
                  "hasMore" : false,
                  "totalResults" : "1000"
                }
              }
            }
          },
          "204" : {
            "description" : "EventsOneHotel not found."
          },
          "400" : {
            "$ref" : "#/responses/400"
          },
          "401" : {
            "$ref" : "#/responses/401"
          },
          "403" : {
            "$ref" : "#/responses/403"
          },
          "404" : {
            "$ref" : "#/responses/404"
          },
          "405" : {
            "$ref" : "#/responses/405"
          },
          "406" : {
            "$ref" : "#/responses/406"
          },
          "413" : {
            "$ref" : "#/responses/413"
          },
          "414" : {
            "$ref" : "#/responses/414"
          },
          "415" : {
            "$ref" : "#/responses/415"
          },
          "500" : {
            "$ref" : "#/responses/500"
          },
          "502" : {
            "$ref" : "#/responses/502"
          },
          "503" : {
            "$ref" : "#/responses/503"
          }
        },
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "tags" : [ "EventManagement" ]
      }
    },
    "/hotels/{hotelId}/events/{eventId}" : {
      "get" : {
        "summary" : "Get an Event",
        "description" : "This API will allow you to retrieve an event by specifying the event ID in the path.  Event details will be returned.  You can also add fetch instructions to specify what event data you would like returned in the response.  If you don't know the eventID, please use getEvents API to find the event and it's respective eventID. <p><strong>OperationId:</strong>getEvent</p>",
        "operationId" : "getEvent",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2000,
          "description" : "Unique ID of the event",
          "x-example" : "3700516"
        }, {
          "name" : "hotelId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 20,
          "description" : "Unique ID of a hotel",
          "x-example" : "BHOTEL"
        }, {
          "name" : "fetchInstructions",
          "in" : "query",
          "type" : "array",
          "collectionFormat" : "multi",
          "description" : "Instruction to fetch all eligible master events for the selected event",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "EventDetails", "BlocksInfo", "Indicators", "Notes", "AlternateEventsInfo", "SubEventsInfo", "MasterEventInfo", "Revenues", "IncludeInactiveSubEventsInfo", "IncludeInactiveMasterEventInfo", "ActualEventDetails", "EligibleMasterEventDetails" ]
          },
          "x-example" : [ "Indicators", "Notes" ],
          "required" : false
        }, {
          "$ref" : "#/parameters/authKey"
        }, {
          "$ref" : "#/parameters/x-app-key"
        }, {
          "$ref" : "#/parameters/x-hotelid"
        }, {
          "$ref" : "#/parameters/x-externalsystem"
        }, {
          "$ref" : "#/parameters/Accept-Language"
        } ],
        "responses" : {
          "200" : {
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              }
            },
            "description" : "Response object for fetching event.",
            "schema" : {
              "$ref" : "#/definitions/event"
            },
            "examples" : {
              "application/json" : {
                "eventDetails" : [ {
                  "eventPrimaryInfo" : {
                    "eventId" : {
                      "id" : "238039"
                    },
                    "hotelId" : "HOTEL1"
                  },
                  "eventDetail" : {
                    "eventName" : {
                      "defaultText" : "Breakfast - Buffet and Meeting"
                    },
                    "eventType" : "BRKFTB",
                    "eventTimeSpan" : {
                      "startDateTime" : "2020-02-20 06:00:00.0",
                      "endDateTime" : "2020-02-20 07:00:00.0"
                    },
                    "eventStatus" : {
                      "status" : {
                        "code" : "INQ"
                      }
                    },
                    "attendees" : {
                      "expected" : "10"
                    },
                    "doorcard" : "Buffet Breakfast",
                    "masterEvent" : true,
                    "subEvent" : false,
                    "packageEvent" : false,
                    "alternateEvent" : false,
                    "notMoveable" : false,
                    "loudEvent" : false,
                    "hasPostings" : false,
                    "displayDoorcard" : true,
                    "cateringDeductInventory" : false,
                    "eventShared" : false,
                    "createDateTime" : "2020-03-31 10:30:38.0",
                    "creatorId" : "BEN@SFIRST",
                    "lastModifyDateTime" : "2020-07-13 01:47:29.0",
                    "lastModifierId" : "SAM@VAFIRST",
                    "includeSpaceInPackage" : false,
                    "eventLevelRevenueActualization" : true
                  },
                  "eventBlockInfo" : {
                    "blockIdList" : [ {
                      "id" : "427673"
                    } ],
                    "blockDetails" : {
                      "blockCode" : "180220DIVB",
                      "blockName" : "First Company Block with Events",
                      "blockDates" : {
                        "startDate" : "2020-02-20",
                        "endDate" : "2020-02-26"
                      }
                    },
                    "blockProfiles" : {
                      "fullOverlay" : false
                    },
                    "hotelId" : "HOTEL1"
                  },
                  "functionSpaceInformation" : {
                    "functionSpaceCode" : "103",
                    "functionSpaceDescription" : "Conway Room",
                    "setupCode" : "CON",
                    "setupDescription" : "Conference Room",
                    "setupTime" : "7",
                    "setdownTime" : "0",
                    "rentalCode" : "CUSTOM",
                    "minimumOccupancy" : "1",
                    "maximumOccupancy" : "20",
                    "shareable" : false
                  },
                  "eventNotes" : [ {
                    "noteId" : {
                      "id" : "57013"
                    },
                    "noteCode" : "CH",
                    "internal" : true,
                    "noteTitle" : "Change",
                    "comment" : "Change Notes",
                    "createDateTime" : "2020-05-14 02:23:23.0",
                    "creatorId" : "JEN@SFIRST",
                    "lastModifyDateTime" : "2020-05-14 02:23:23.0",
                    "lastModifierId" : "JEN@SFIRST"
                  }, {
                    "noteId" : {
                      "id" : "57014"
                    },
                    "noteCode" : "CH",
                    "internal" : false,
                    "noteTitle" : "Change",
                    "comment" : "Change comment: non internal Event",
                    "createDateTime" : "2020-05-14 02:23:50.0",
                    "creatorId" : "JEN@SFIRST",
                    "lastModifyDateTime" : "2020-05-14 02:23:50.0",
                    "lastModifierId" : "JEN@SFIRST"
                  } ],
                  "onTheBooksRevenue" : {
                    "amount" : "250"
                  }
                } ]
              }
            }
          },
          "204" : {
            "description" : "Event not found."
          },
          "400" : {
            "$ref" : "#/responses/400"
          },
          "401" : {
            "$ref" : "#/responses/401"
          },
          "403" : {
            "$ref" : "#/responses/403"
          },
          "404" : {
            "$ref" : "#/responses/404"
          },
          "405" : {
            "$ref" : "#/responses/405"
          },
          "406" : {
            "$ref" : "#/responses/406"
          },
          "413" : {
            "$ref" : "#/responses/413"
          },
          "414" : {
            "$ref" : "#/responses/414"
          },
          "415" : {
            "$ref" : "#/responses/415"
          },
          "500" : {
            "$ref" : "#/responses/500"
          },
          "502" : {
            "$ref" : "#/responses/502"
          },
          "503" : {
            "$ref" : "#/responses/503"
          }
        },
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "tags" : [ "EventManagement" ]
      }
    }
  },
  "parameters" : {
    "authKey" : {
      "name" : "authorization",
      "description" : "Bearer token that needs to be passed which is generated post user authentication",
      "type" : "string",
      "in" : "header",
      "required" : true
    },
    "x-app-key" : {
      "name" : "x-app-key",
      "description" : "Client or Partner’s Application Key",
      "type" : "string",
      "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in" : "header",
      "required" : true
    },
    "x-hotelid" : {
      "name" : "x-hotelid",
      "type" : "string",
      "description" : "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
      "in" : "header",
      "required" : true
    },
    "x-externalsystem" : {
      "name" : "x-externalsystem",
      "type" : "string",
      "maxLength" : 80,
      "description" : "External system code.",
      "in" : "header",
      "x-example" : "DISCRS"
    },
    "Accept-Language" : {
      "name" : "Accept-Language",
      "type" : "string",
      "description" : "Language code",
      "in" : "header"
    }
  },
  "responses" : {
    "400" : {
      "description" : "Bad Request",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "401" : {
      "description" : "Unauthorized"
    },
    "403" : {
      "description" : "Forbidden"
    },
    "404" : {
      "description" : "Resource not found",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "405" : {
      "description" : "Method not allowed"
    },
    "406" : {
      "description" : "Not acceptable."
    },
    "413" : {
      "description" : "Request Entity Too Large"
    },
    "414" : {
      "description" : "Request URI Too Large"
    },
    "415" : {
      "description" : "Unsupported Media Type"
    },
    "500" : {
      "description" : "System Error",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "502" : {
      "description" : "Bad Gateway"
    },
    "503" : {
      "description" : "Service Unavailable"
    }
  },
  "definitions" : {
    "events" : {
      "type" : "object",
      "description" : "Response object for fetching events.",
      "properties" : {
        "eventSummaries" : {
          "description" : "Events matching the search criteria.",
          "$ref" : "#/definitions/eventSummariesInfoType"
        },
        "masterInfoList" : {
          "description" : "Refer to Generic common types document",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/masterInfoType"
          }
        },
        "links" : {
          "$ref" : "#/definitions/links"
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      }
    },
    "eventSummariesInfoType" : {
      "type" : "object",
      "description" : "Collection of events.",
      "properties" : {
        "eventSummary" : {
          "description" : "Contains master/sub-events or standalone events summary information",
          "type" : "array",
          "maxItems" : 4000,
          "items" : {
            "$ref" : "#/definitions/eventSummaryInfoType"
          }
        },
        "totalPages" : {
          "description" : "Evaluated total page count based on the requested max fetch count.",
          "type" : "integer"
        },
        "offset" : {
          "description" : "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type" : "integer"
        },
        "limit" : {
          "description" : "Indicates maximum number of records a Web Service should return.",
          "type" : "integer"
        },
        "hasMore" : {
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type" : "boolean"
        },
        "totalResults" : {
          "description" : "Total number of rows queried",
          "type" : "integer"
        },
        "count" : {
          "description" : "Total number of rows returned",
          "type" : "integer"
        }
      }
    },
    "eventSummaryInfoType" : {
      "type" : "object",
      "description" : "Contains information about an event.",
      "properties" : {
        "eventId" : {
          "description" : "Unique identifier of the event.",
          "$ref" : "#/definitions/eventId"
        },
        "eventLink" : {
          "description" : "Link information with other event(s).",
          "$ref" : "#/definitions/cateringEventLinkType"
        },
        "blockIdList" : {
          "description" : "Unique ID to represent the block that the event belongs to.",
          "$ref" : "#/definitions/blockIdList"
        },
        "blockName" : {
          "description" : "Name of the block.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "attendees" : {
          "description" : "Number of event attendees.",
          "type" : "integer"
        },
        "functionSpaceDetails" : {
          "description" : "The function space functionSpaceDetails where the event takes place.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "rentalAmount" : {
          "description" : "Rental amount for the event function space.",
          "type" : "number"
        },
        "functionSpaceSetup" : {
          "description" : "Setup Style selected for the Function Space.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "indicators" : {
          "description" : "Indicators for additional event information.",
          "$ref" : "#/definitions/indicatorsType"
        },
        "eventStatus" : {
          "description" : "Status of the event. Examples are INQ, TEN, DEF, etc.",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "waitlistReturnStatus" : {
          "description" : "This is to show the turned status of an event",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "cateringStatusType" : {
          "description" : "Event Status Type Flag to identify if the Catering event is cancelled, lost, actual, etc. Examples are C(Cancelled), L (Lost), R (Refused), A (Actual).",
          "$ref" : "#/definitions/cateringStatusTypeType"
        },
        "cateringStatusDeductInventory" : {
          "description" : "Flag to indicate if the Catering event deducts resources from inventory.",
          "type" : "boolean"
        },
        "cateringStatusReturnToInventory" : {
          "description" : "Flag to indicate if the Catering event returns resources to inventory.",
          "type" : "boolean"
        },
        "setupTime" : {
          "description" : "Event space setupCode time in minutes.",
          "type" : "integer"
        },
        "tearDownTime" : {
          "description" : "Event space tear down time in minutes.",
          "type" : "integer"
        },
        "masterEvent" : {
          "description" : "Flag to indicate if the event is a master event.",
          "type" : "boolean"
        },
        "subEvent" : {
          "description" : "Flag to indicate if the event is a sub event.",
          "type" : "boolean"
        },
        "packageEvent" : {
          "description" : "Flag to indicate if the event is part of a package.",
          "type" : "boolean"
        },
        "alternateEvent" : {
          "description" : "Flag to indicate if the event is booked as a backup for another event.",
          "type" : "boolean"
        },
        "displayDoorCard" : {
          "description" : "Flag to indicate if the doorcard has been selected to display on reports or external readerboard systems.",
          "type" : "boolean"
        },
        "doorCard" : {
          "description" : "The doorcard to be displayed on reports or external readerboard systems.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 60
        },
        "excludeFromForecast" : {
          "description" : "Flag to indicate if the event revenue should be excluded from the forecast.",
          "type" : "boolean"
        },
        "setupCode" : {
          "description" : "Setup style code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "minimumOccupancy" : {
          "description" : "Minimum Occupancy for the SetupCode of Catring Event.",
          "type" : "integer"
        },
        "maximumOccupancy" : {
          "description" : "Maximum Occupancy for the SetupCode of Catring Event.",
          "type" : "integer"
        },
        "discountPercentage" : {
          "description" : "Discount Percentage applied to Rent Amount.",
          "type" : "number",
          "minimum" : 0,
          "maximum" : 100
        },
        "loudEvent" : {
          "description" : "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type" : "boolean"
        },
        "rentalCode" : {
          "description" : "Rate Code for function space.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "eventShared" : {
          "description" : "Flag to indicate if the event is shareable with other events.",
          "type" : "boolean"
        },
        "shareable" : {
          "description" : "Flag to indicate if the event functionSpaceDetails is shareable.",
          "type" : "boolean"
        },
        "inactiveDate" : {
          "description" : "Inactivation date of the event.",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "packageCode" : {
          "description" : "Package Code of the Event if it has a Package Enabled in it.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "packageName" : {
          "description" : "Package Name of the Event.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "hotelId" : {
          "description" : "Hotel where the event is booked.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockHotelCode" : {
          "description" : "Hotel where the Block is created for the event.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "hasPostings" : {
          "description" : "Indicates whether the event has postings.",
          "type" : "boolean"
        },
        "blockHasPostings" : {
          "description" : "Indicates whether any event in the block has postings.",
          "type" : "boolean"
        },
        "hasPartialPostings" : {
          "description" : "Indicates whether the event has posted some charges, but not all.",
          "type" : "boolean"
        },
        "allPosted" : {
          "description" : "Indicates whether the event has posted all charges.",
          "type" : "boolean"
        },
        "nothingPosted" : {
          "description" : "Indicates that none of the charges on the event have been posted.",
          "type" : "boolean"
        },
        "eventStartDate" : {
          "description" : "The starting value of the time span.",
          "type" : "string",
          "format" : "date-time"
        },
        "eventEndDate" : {
          "description" : "The ending value of the time span.",
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "description" : "Type of event. Examples are LUN, DIN, etc.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "eventName" : {
          "description" : "Name of event. This is used to describe the event.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 60
        },
        "cateringCurrency" : {
          "description" : "Currency code when base currency of the property is different than the catering currency.",
          "type" : "string",
          "minLength" : 3,
          "maxLength" : 3
        },
        "cateringQuotedCurrency" : {
          "description" : "Currency code which is been quoted for Catering Events",
          "type" : "string",
          "minLength" : 3,
          "maxLength" : 3
        },
        "eventIndicators" : {
          "description" : "Indicators of additional information attached to the event",
          "$ref" : "#/definitions/indicatorsType"
        }
      }
    },
    "eventId" : {
      "type" : "object",
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties" : {
        "type" : {
          "description" : "A reference to the type of object defined by the UniqueID elementSpace.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "idContext" : {
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        }
      }
    },
    "cateringEventLinkType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "type" : {
          "$ref" : "#/definitions/cateringEventLinkTypeType"
        },
        "masterEventDates" : {
          "$ref" : "#/definitions/dateTimeSpanType"
        }
      }
    },
    "uniqueID_Type" : {
      "type" : "object",
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties" : {
        "id" : {
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "description" : "A reference to the type of object defined by the UniqueID elementSpace.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "cateringEventLinkTypeType" : {
      "type" : "string",
      "description" : "A collection of supported list of link types for catering events.",
      "enum" : [ "SubEvent", "Alternate" ]
    },
    "dateTimeSpanType" : {
      "type" : "object",
      "description" : "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
      "properties" : {
        "startDateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDateTime" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "blockIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      }
    },
    "codeDescriptionType" : {
      "type" : "object",
      "description" : "This contains a generic code and description information.",
      "properties" : {
        "code" : {
          "description" : "Code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "description" : {
          "description" : "description.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        }
      }
    },
    "indicatorsType" : {
      "type" : "array",
      "description" : "Collection of lamp indicators.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/indicatorType"
      }
    },
    "indicatorType" : {
      "type" : "object",
      "description" : "Lamp indicator Type.",
      "properties" : {
        "indicatorName" : {
          "description" : "Name of the indicator.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "count" : {
          "description" : "Indicates number of occurrences of the indicator.",
          "type" : "integer"
        }
      }
    },
    "bookingStatusType" : {
      "type" : "object",
      "description" : "Booking status code, description and configured color of the status. This will be used for block and event statuses.",
      "properties" : {
        "status" : {
          "description" : "Status code and description.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "color" : {
          "description" : "Color from status configuration.",
          "$ref" : "#/definitions/statusColorType"
        }
      }
    },
    "statusColorType" : {
      "type" : "string",
      "description" : "Status code color configuration type.",
      "enum" : [ "White", "Red", "Blue", "Cyan", "Magenta", "Green", "Brown", "Black", "Yellow", "Gray" ]
    },
    "cateringStatusTypeType" : {
      "type" : "string",
      "description" : "List of Event Status Types to identify the current status of catering events.",
      "enum" : [ "Waitlist", "Regret", "Inquiry", "Cancel", "Actual", "Referral", "Lost" ]
    },
    "masterInfoType" : {
      "type" : "object",
      "properties" : {
        "codeInfo" : {
          "type" : "array",
          "maxItems" : 4000,
          "items" : {
            "$ref" : "#/definitions/codeInfoType"
          }
        },
        "codeType" : {
          "$ref" : "#/definitions/masterType"
        }
      }
    },
    "codeInfoType" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "addtionalCodeInfo" : {
          "$ref" : "#/definitions/addtionalCodeInfoType"
        },
        "hotelId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "code" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "addtionalCodeInfoType" : {
      "type" : "array",
      "description" : "Holds name of additional code information",
      "maxItems" : 4000,
      "items" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "Holds name of additional code information",
            "$ref" : "#/definitions/masterInfoCodeDetailType"
          },
          "value" : {
            "description" : "Holds value of additional code information",
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType" : {
      "type" : "string",
      "enum" : [ "LongDescription", "ShortDescription" ]
    },
    "masterType" : {
      "type" : "string",
      "enum" : [ "Country", "State", "AddressType", "PhoneType", "RateCategory", "CalculationRule", "PostingRythym", "BillingInstruction", "TransactionCode", "DisplaySet", "MailingActions", "DistanceType", "District", "Territory", "FiscalRegion", "InventoryItem", "Package", "RoomFeaturePreference", "SpecialPreference", "Promotion", "Department", "ReservationPreference", "FacilityTask", "RoomType", "RateCode", "Block" ]
    },
    "links" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/instanceLink"
      }
    },
    "instanceLink" : {
      "type" : "object",
      "description" : "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties" : {
        "href" : {
          "description" : "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type" : "string"
        },
        "rel" : {
          "description" : "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type" : "string"
        },
        "templated" : {
          "description" : "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type" : "boolean",
          "default" : false
        },
        "method" : {
          "description" : "HTTP method for requesting the target of the link.",
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
        },
        "targetSchema" : {
          "description" : "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type" : "string"
        },
        "operationId" : {
          "description" : "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type" : "string"
        },
        "title" : {
          "description" : "Exact copy of the \"summary\" field on the linked operation.",
          "type" : "string"
        }
      },
      "required" : [ "href", "rel", "method", "operationId" ]
    },
    "warningsType" : {
      "type" : "array",
      "description" : "Used in conjunction with the Success elementSpace to define a business error.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/warningType"
      }
    },
    "warningType" : {
      "type" : "object",
      "description" : "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Property Value"
        },
        "shortText" : {
          "description" : "An abbreviated version of the error in textual format.",
          "type" : "string",
          "maxLength" : 2000
        },
        "code" : {
          "description" : "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "docURL" : {
          "description" : "If present, this URL refers to an online description of the error that occurred.",
          "type" : "string",
          "maxLength" : 2000
        },
        "status" : {
          "description" : "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type" : "string",
          "maxLength" : 2000
        },
        "tag" : {
          "description" : "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type" : "string",
          "maxLength" : 2000
        },
        "recordId" : {
          "description" : "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type" : "string",
          "maxLength" : 2000
        },
        "type" : {
          "description" : "The Warning elementSpace MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "language" : {
          "description" : "Language identification.",
          "type" : "string",
          "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph" : {
          "description" : "Reference Place Holder used as an index for this warning.",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 8
        }
      }
    },
    "exceptionDetailType" : {
      "title" : "Error Detail",
      "description" : "Complex type that contains error details for a REST call.",
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title" : {
          "type" : "string",
          "description" : "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status" : {
          "type" : "integer",
          "description" : "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail" : {
          "type" : "string",
          "description" : "Human-readable description specific to this occurrence of the problem."
        },
        "o:errorCode" : {
          "type" : "string",
          "description" : "Application error code, which is different from HTTP error code."
        },
        "o:errorPath" : {
          "type" : "string",
          "description" : "Path to the problem at the resource or property level."
        },
        "o:errorDetails" : {
          "description" : "Details of the error message, consisting of a hierarchical tree structure.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/errorInstance"
          }
        },
        "links" : {
          "$ref" : "#/definitions/links"
        }
      },
      "required" : [ "type", "title" ]
    },
    "errorInstance" : {
      "title" : "Error Instance Details",
      "description" : "Complex type that contains error instance details for a REST call.",
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title" : {
          "type" : "string",
          "description" : "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status" : {
          "type" : "integer",
          "description" : "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail" : {
          "type" : "string",
          "description" : "Human-readable description specific to this occurrence of the problem."
        },
        "o:errorCode" : {
          "type" : "string",
          "description" : "Application error code, which is different from HTTP error code."
        },
        "o:errorPath" : {
          "type" : "string",
          "description" : "Path to the problem at the resource or property level."
        }
      },
      "required" : [ "type", "title" ]
    },
    "event" : {
      "type" : "object",
      "description" : "Object containing details of the event.",
      "properties" : {
        "eventDetails" : {
          "description" : "Event information.",
          "$ref" : "#/definitions/eventsInfoType"
        },
        "links" : {
          "$ref" : "#/definitions/links"
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      }
    },
    "eventsInfoType" : {
      "type" : "array",
      "description" : "Pertain event information.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/eventInfoType"
      }
    },
    "eventInfoType" : {
      "type" : "object",
      "description" : "Catering Event information.",
      "properties" : {
        "eventPrimaryInfo" : {
          "description" : "Pertain event primary information.",
          "$ref" : "#/definitions/eventPrimaryInfoType"
        },
        "eventDetail" : {
          "description" : "Pertain detail event's information.",
          "$ref" : "#/definitions/eventDetailType"
        },
        "eventResources" : {
          "description" : "Pertain detail event's information.",
          "$ref" : "#/definitions/eventResourcesListType"
        },
        "processInstructions" : {
          "description" : "Instructions to control how the event is created.",
          "$ref" : "#/definitions/eventProcessInstructionsType"
        },
        "eventBlockInfo" : {
          "description" : "Pertain information for block where event belongs to.",
          "$ref" : "#/definitions/blockType"
        },
        "functionSpaceInformation" : {
          "description" : "Pertain event's function space information.",
          "$ref" : "#/definitions/eventFunctionSpaceType"
        },
        "eventNotes" : {
          "description" : "Pertain event's notes.",
          "$ref" : "#/definitions/eventNotesType"
        },
        "eventIndicators" : {
          "description" : "Indicators of additional information attached to the event",
          "$ref" : "#/definitions/indicatorsType"
        },
        "onTheBooksRevenue" : {
          "description" : "On The Books (OTB) catering revenue for the event.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "subEventsDetail" : {
          "description" : "Pertain detail information of sub event/events.",
          "$ref" : "#/definitions/lightEventsDetailType"
        },
        "altEventsDetail" : {
          "description" : "Pertain detail information of alternate event/events in case functionspace for current event becomes unavailable",
          "$ref" : "#/definitions/lightEventsDetailType"
        },
        "masterEventDetail" : {
          "description" : "Pertain detail information of master event.",
          "$ref" : "#/definitions/lightEventDetailType"
        },
        "eventRevenues" : {
          "description" : "Pertain event revenues.",
          "$ref" : "#/definitions/eventRevenuesInformationType"
        }
      }
    },
    "eventPrimaryInfoType" : {
      "type" : "object",
      "description" : "Pertain event identifications.",
      "properties" : {
        "eventId" : {
          "description" : "Unique identifier for the event.",
          "$ref" : "#/definitions/eventId"
        },
        "hotelId" : {
          "description" : "Hotel code where event will be organized.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "includeSubEvents" : {
          "description" : "Indicates whether to delete/inactive the sub event(s) of the master event.",
          "type" : "boolean"
        }
      }
    },
    "eventDetailType" : {
      "type" : "object",
      "description" : "Pertain Information about the Event Details",
      "properties" : {
        "eventName" : {
          "description" : "Name of event.",
          "$ref" : "#/definitions/translationTextType60"
        },
        "eventType" : {
          "description" : "Type of event.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "eventTimeSpan" : {
          "description" : "Pertain event duration from eventStartDate and eventEndDate date and time.",
          "$ref" : "#/definitions/dateTimeSpanType"
        },
        "eventStatus" : {
          "description" : "Status details of the Event.",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "waitlistReturnStatus" : {
          "description" : "This is to show the turned status of an event",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "cateringStatusType" : {
          "description" : "Event Status Type Flag to identify if the Catering event is cancelled or lost. Examples are C(Cancelled), L (Lost), R (Refused).",
          "$ref" : "#/definitions/cateringStatusTypeType"
        },
        "attendees" : {
          "description" : "Attendees defined in the catering event.",
          "$ref" : "#/definitions/cateringEventsAttendeesType"
        },
        "masterEventId" : {
          "description" : "Master event identifier.",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "doorcard" : {
          "description" : "It is the group details to display on the outside of a meeting functionSpaceDetails.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        },
        "eventLink" : {
          "description" : "Link information with other event(s).",
          "$ref" : "#/definitions/cateringEventLinkType"
        },
        "inactiveDate" : {
          "description" : "Inactivation date of the event.",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "packageId" : {
          "description" : "Package Id of the Event.",
          "type" : "integer"
        },
        "packageName" : {
          "description" : "Package Name of the Event.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "masterEvent" : {
          "description" : "Indicates whether event is master event.",
          "type" : "boolean"
        },
        "subEvent" : {
          "description" : "Flag to indicate if the event is a sub event.",
          "type" : "boolean"
        },
        "packageEvent" : {
          "description" : "Flag to indicate if the event is part of a package.",
          "type" : "boolean"
        },
        "alternateEvent" : {
          "description" : "Flag to indicate if the event is booked as a backup for another event.",
          "type" : "boolean"
        },
        "waitlisted" : {
          "description" : "Indicates whether event is wait listed.",
          "type" : "boolean"
        },
        "notMoveable" : {
          "description" : "Indicates whether event dates and functionSpaceDetails are move able.",
          "type" : "boolean"
        },
        "loudEvent" : {
          "description" : "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type" : "boolean"
        },
        "hasPostings" : {
          "description" : "Indicates whether the events has postings.",
          "type" : "boolean"
        },
        "displayDoorcard" : {
          "description" : "Indicates whether display the doorcard information on the Event Overview report.",
          "type" : "boolean"
        },
        "cateringDeductInventory" : {
          "description" : "Indicates if catering event's spaces are deducted from inventory",
          "type" : "boolean"
        },
        "eventShared" : {
          "description" : "Flag to indicate if the event is shareable with other events.",
          "type" : "boolean"
        },
        "createDateTime" : {
          "description" : "Time stamp of the creation.",
          "type" : "string",
          "format" : "date-time"
        },
        "creatorId" : {
          "description" : "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "lastModifyDateTime" : {
          "description" : "Time stamp of last modification.",
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifierId" : {
          "description" : "Identifies the last software system or person to modify a record.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "purgeDate" : {
          "description" : "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "includeSpaceInPackage" : {
          "description" : "Flag to indicate if the event space is associated from the Package",
          "type" : "boolean"
        },
        "eventLevelRevenueActualization" : {
          "description" : "Flag that indicates if actual revenue can be manually edited.",
          "type" : "boolean"
        }
      }
    },
    "translationTextType60" : {
      "type" : "object",
      "description" : "Contains Multiple translated texts and language codes.",
      "properties" : {
        "defaultText" : {
          "description" : "Default text with Character length from 0 to 60.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 60
        },
        "translations" : {
          "description" : "List of translated text and language codes.",
          "$ref" : "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType" : {
      "type" : "array",
      "description" : "Language code for the translation.",
      "maxItems" : 4000,
      "items" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "Used for Character Strings, length 0 to 2000.",
            "minLength" : 0,
            "maxLength" : 2000
          },
          "language" : {
            "description" : "Language identification.",
            "type" : "string",
            "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description" : "Language code for the translation."
      }
    },
    "cateringEventsAttendeesType" : {
      "type" : "object",
      "description" : "All different attendees that a catering event can have.",
      "properties" : {
        "expected" : {
          "description" : "Number of expected attendees for the catering event.",
          "type" : "integer"
        },
        "guaranteed" : {
          "description" : "Number of guaranteed attendees for the catering event.",
          "type" : "integer"
        },
        "actual" : {
          "description" : "Number of actual attendees attending to the catering event.",
          "type" : "integer"
        },
        "set" : {
          "description" : "Setup for number of event attendees for resources (i.e. water, pads, tables, etc.).",
          "type" : "integer"
        },
        "packageExpected" : {
          "description" : "Number of package expected attendees for the catering event.",
          "type" : "integer"
        },
        "packageGuaranteed" : {
          "description" : "Number of package guaranteed attendees for the catering event.",
          "type" : "integer"
        },
        "packageActual" : {
          "description" : "Number of actual package attendees attending the catering event.",
          "type" : "integer"
        }
      }
    },
    "eventResourcesListType" : {
      "type" : "array",
      "description" : "Event resources information.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/cateringEventResourceType"
      }
    },
    "cateringEventResourceType" : {
      "type" : "object",
      "description" : "Event resource information.",
      "properties" : {
        "resourceId" : {
          "description" : "Unique identifier for an event resource.",
          "$ref" : "#/definitions/resourceId"
        },
        "resourceType" : {
          "description" : "Type of event resource.",
          "$ref" : "#/definitions/resourceType"
        },
        "resourceName" : {
          "description" : "Resource name, this could be a resource item or a menu.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "setupCode" : {
          "description" : "Setup style for the function space.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "itemAttribute" : {
          "description" : "Item attribute name for non Food and Beverage item.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "quantity" : {
          "description" : "The required quantity of the resource.",
          "type" : "number"
        },
        "hours" : {
          "description" : "The number of charged hours for the resource.",
          "type" : "number"
        },
        "persons" : {
          "description" : "The number of charged persons for the resource.",
          "type" : "number"
        },
        "quantityIncluded" : {
          "description" : "The attendees/quantity of an item INCLUDED in a package price.",
          "type" : "number"
        },
        "quantityExcluded" : {
          "description" : "The attendees/quantity charged extra, EXCLUDED from the package price.",
          "type" : "number"
        },
        "unitPrice" : {
          "description" : "Price per unit of the resource.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "revenue" : {
          "description" : "Total revenue on the books.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "rentalCode" : {
          "description" : "Rate Code that is attached to the function spaces and non Food and Beverage items",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "discount" : {
          "description" : "The menu discount percentage.",
          "type" : "number"
        },
        "eventResourceNotes" : {
          "description" : "Pertains to the event resource's notes.",
          "$ref" : "#/definitions/eventResourceNotesType"
        },
        "sellStartDate" : {
          "description" : "Sell Start Date of resource of type Menu.",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "sellEndDate" : {
          "description" : "Sell End Date of resource of type Menu.",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "eventStartDate" : {
          "description" : "Event Start Date of resource of type Menu.",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "eventEndDate" : {
          "description" : "Event End Date of resource of type Menu.",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "consumptionBased" : {
          "description" : "Indicates that this resource is consumption based in a catering package",
          "type" : "boolean"
        },
        "multiChoice" : {
          "description" : "Indicates that this resource is a MultiChoice Menu or not",
          "type" : "boolean"
        },
        "hotelId" : {
          "description" : "Hotel code which the event resource belong to.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "order" : {
          "description" : "The order of the resource in the Banquet Event Order within their specific resource group.",
          "type" : "string",
          "maxLength" : 2000
        },
        "hasDiscountMenuItem" : {
          "description" : "Flag that indicates if at least one menu item has a discount.",
          "type" : "boolean"
        },
        "hasNotes" : {
          "description" : "Flag that indicates the resource has notes associated with it.",
          "type" : "boolean"
        },
        "external" : {
          "description" : "Indicates that item must be ordered externally.",
          "type" : "boolean"
        },
        "custom" : {
          "description" : "Indicates that this resource item is a custom item added for this event.",
          "type" : "boolean"
        },
        "packaged" : {
          "description" : "Indicates that this resource is included in a catering package.",
          "type" : "boolean"
        }
      }
    },
    "resourceId" : {
      "type" : "object",
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties" : {
        "url" : {
          "description" : "URL that identifies the location associated with the record identified by the UniqueID.",
          "type" : "string",
          "maxLength" : 2000
        },
        "type" : {
          "description" : "A reference to the type of object defined by the UniqueID elementSpace.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "instance" : {
          "description" : "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idContext" : {
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idExtension" : {
          "description" : "Additional identifying value assigned by the creating system.",
          "type" : "integer"
        }
      }
    },
    "resourceType" : {
      "type" : "string",
      "description" : "List of resource types.",
      "enum" : [ "FunctionSpace", "Menu", "Item" ]
    },
    "currencyAmountType" : {
      "type" : "object",
      "description" : "A monetary value expressed with a currency code.",
      "properties" : {
        "amount" : {
          "description" : "A monetary amount.",
          "type" : "number"
        },
        "currencyCode" : {
          "description" : "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type" : "string",
          "minLength" : 3,
          "maxLength" : 3
        }
      }
    },
    "eventResourceNotesType" : {
      "type" : "array",
      "description" : "Contains event resource comment information.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/eventResourceNoteType"
      }
    },
    "eventResourceNoteType" : {
      "type" : "object",
      "description" : "Contains the event resource's comment information.",
      "properties" : {
        "noteId" : {
          "description" : "Unique identifier for event resource comment. If it is missing, this indicate that it is a new comment. If only NoteID is provided then it is a delete operation",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "noteCode" : {
          "description" : "Note code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "internal" : {
          "description" : "Indicates if the comment is internal use only.",
          "type" : "boolean"
        },
        "noteTitle" : {
          "description" : "Contains comment title.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "comment" : {
          "description" : "Contains comment text.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "sequence" : {
          "description" : "Contains display sequence.",
          "type" : "integer"
        },
        "createDateTime" : {
          "description" : "Time stamp of the creation.",
          "type" : "string",
          "format" : "date-time"
        },
        "creatorId" : {
          "description" : "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "lastModifyDateTime" : {
          "description" : "Time stamp of last modification.",
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifierId" : {
          "description" : "Identifies the last software system or person to modify a record.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "purgeDate" : {
          "description" : "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        }
      }
    },
    "eventProcessInstructionsType" : {
      "type" : "object",
      "description" : "Instructions to control how the event is created.",
      "properties" : {
        "overrideCapacity" : {
          "description" : "Flag to indicate if configured function space capacity can be overriden.",
          "type" : "boolean"
        },
        "overbook" : {
          "description" : "Flag to indicate if the function space can be booked when it is occupied by another event.",
          "type" : "boolean"
        },
        "shareable" : {
          "description" : "Flag to indicate if the function space can be booked as shareable with another event.",
          "type" : "boolean"
        },
        "overrideMaxgroups" : {
          "description" : "Flag to indicate if maximum group configured in function space can be overriden.",
          "type" : "boolean"
        },
        "waitList" : {
          "description" : "Flag to indicate if the event can be waitlisted when function space is not available.",
          "type" : "boolean"
        },
        "warnFunctionSpace" : {
          "description" : "Flag to return a warning when the functionspace is being used by other catering event.",
          "type" : "boolean"
        },
        "convertToSubEvent" : {
          "description" : "Flag to indicate that the Event is being converted from Regular Event as a Sub Event linking to a Master Event.",
          "type" : "boolean"
        },
        "convertToRegularEvent" : {
          "description" : "Flag to indicate that the Event is being converted from Sub Event as a Regular Event.",
          "type" : "boolean"
        }
      }
    },
    "blockType" : {
      "type" : "object",
      "properties" : {
        "blockIdList" : {
          "description" : "Collection of unique block identifiers.",
          "$ref" : "#/definitions/blockIdList"
        },
        "externalReferences" : {
          "description" : "External Reference information for Reservation.",
          "$ref" : "#/definitions/externalReferencesType"
        },
        "blockDetails" : {
          "description" : "Detailed Block information for this block.",
          "$ref" : "#/definitions/blockDetailsType"
        },
        "blockProfiles" : {
          "description" : "A collection of all the profiles associated to this block. Please comment that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the profiles that should be associated to the block should be provided during a change operation. Any profiles not provided will be detached from this block. By default the full overlay is considered false if this tag is left blank. If values are provided for profiles, only the full overlay functionality is provided at this time.",
          "type" : "object",
          "properties" : {
            "blockProfile" : {
              "description" : "The list of profiles associated with the block.",
              "type" : "array",
              "maxItems" : 4000,
              "items" : {
                "$ref" : "#/definitions/blockProfilesType"
              }
            },
            "fullOverlay" : {
              "description" : "Indicates whether to perform a full overlay for the profiles. Currently only the Fulloverlay functionality is provided.",
              "type" : "boolean"
            }
          }
        },
        "hotelId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "externalReferencesType" : {
      "type" : "array",
      "description" : "This type contains unique information of external reference.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType" : {
      "type" : "object",
      "description" : "This type contains unique information of external reference.",
      "properties" : {
        "id" : {
          "description" : "Unique ID of external reference.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idExtension" : {
          "description" : "ID extension for external reference.",
          "type" : "integer"
        },
        "idContext" : {
          "description" : "ID context for external reference.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        }
      }
    },
    "blockDetailsType" : {
      "type" : "object",
      "description" : "Information about the Block Details",
      "properties" : {
        "blockCode" : {
          "description" : "Block code for the block.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockName" : {
          "description" : "Name of the block.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "blockDates" : {
          "description" : "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "shoulderDates" : {
          "description" : "The Shoulder Dates (Arrival, Departure) which covers the Block Shoulder Span.",
          "$ref" : "#/definitions/timeSpanType"
        }
      }
    },
    "timeSpanType" : {
      "type" : "object",
      "description" : "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
      "properties" : {
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        },
        "duration" : {
          "type" : "string"
        }
      }
    },
    "blockProfilesType" : {
      "type" : "object",
      "description" : "A collection of Profile objects or Unique IDs of Profiles.",
      "properties" : {
        "profileIdList" : {
          "description" : "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "profile" : {
          "description" : "Provides detailed information regarding either a company or a customer profile.",
          "$ref" : "#/definitions/profileType"
        }
      }
    },
    "uniqueIDListType" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      }
    },
    "profileType" : {
      "type" : "object",
      "description" : "Type provides the detailed information about the profile and its children.",
      "properties" : {
        "customer" : {
          "description" : "Detailed customer information for this profile.",
          "$ref" : "#/definitions/customerType"
        },
        "addresses" : {
          "description" : "List of customer addresses.",
          "type" : "object",
          "properties" : {
            "addressInfo" : {
              "description" : "Collection of Detailed information on an address for the customer.",
              "type" : "array",
              "maxItems" : 4000,
              "items" : {
                "$ref" : "#/definitions/addressInfoType"
              }
            }
          }
        },
        "telephones" : {
          "description" : "List of Telephone Number Information",
          "type" : "object",
          "properties" : {
            "telephoneInfo" : {
              "description" : "Collection of Detailed information on telephone/fax for the customer.",
              "type" : "array",
              "maxItems" : 4000,
              "items" : {
                "$ref" : "#/definitions/telephoneInfoType"
              }
            }
          }
        },
        "emails" : {
          "description" : "List of email address for the customer.",
          "type" : "object",
          "properties" : {
            "emailInfo" : {
              "description" : "Collection of Detailed information on an eMail address for the customer.",
              "type" : "array",
              "maxItems" : 4000,
              "items" : {
                "$ref" : "#/definitions/emailInfoType"
              }
            }
          }
        },
        "relationshipsSummary" : {
          "description" : "Contains a collection of profiles that have a relationship with this profile.",
          "type" : "object",
          "properties" : {
            "relationship" : {
              "description" : "A collection of the profiles summary that have a relationship with this profile.",
              "type" : "array",
              "maxItems" : 4000,
              "items" : {
                "$ref" : "#/definitions/relationshipInfoSummaryType"
              }
            },
            "hasMore" : {
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type" : "boolean"
            },
            "totalResults" : {
              "description" : "Total number of rows queried",
              "type" : "integer"
            },
            "count" : {
              "description" : "Total number of rows returned",
              "type" : "integer"
            }
          }
        },
        "stayReservationInfoList" : {
          "description" : "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref" : "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      }
    },
    "customerType" : {
      "type" : "object",
      "description" : "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties" : {
        "personName" : {
          "description" : "Detailed name information for the customer.",
          "type" : "array",
          "maxItems" : 5,
          "items" : {
            "$ref" : "#/definitions/personNameType"
          }
        }
      }
    },
    "personNameType" : {
      "type" : "object",
      "description" : "This provides name information for a person.",
      "properties" : {
        "givenName" : {
          "description" : "Given name, first name or names.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "surname" : {
          "description" : "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname elementSpace may be used to pass the full name.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "addressInfoType" : {
      "type" : "object",
      "description" : "Provides address information.",
      "properties" : {
        "address" : {
          "description" : "Address details for the profile.",
          "$ref" : "#/definitions/addressType"
        },
        "id" : {
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "description" : "A reference to the type of object defined by the UniqueID elementSpace.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "addressType" : {
      "type" : "object",
      "description" : "Provides address information.",
      "properties" : {
        "isValidated" : {
          "description" : "Indicator to define if the Address is validated by the Address Validation System.",
          "type" : "boolean"
        },
        "addressLine" : {
          "description" : "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type" : "array",
          "maxItems" : 4,
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 80
          }
        },
        "cityName" : {
          "description" : "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "postalCode" : {
          "description" : "Post Office Code number.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 15
        },
        "cityExtension" : {
          "description" : "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "county" : {
          "description" : "County or District Name (e.g., Fairfax). This is read only.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "state" : {
          "description" : "State or Province name (e.g., Texas).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "description" : "Country name (e.g., Ireland).",
          "$ref" : "#/definitions/countryNameType"
        }
      }
    },
    "countryNameType" : {
      "type" : "object",
      "description" : "Code for a country or a nationality.",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Used for Character Strings, length 0 to 200.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "code" : {
          "description" : "Code for a country or a nationality.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "telephoneInfoType" : {
      "type" : "object",
      "description" : "Information on a telephone number for the customer.",
      "properties" : {
        "telephone" : {
          "description" : "Phone details for the profile.",
          "$ref" : "#/definitions/telephoneType"
        },
        "id" : {
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "description" : "A reference to the type of object defined by the UniqueID elementSpace.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "telephoneType" : {
      "type" : "object",
      "description" : "Information on a telephone number for the customer.",
      "properties" : {
        "phoneNumber" : {
          "description" : "Telephone number assigned to a single location.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "emailInfoType" : {
      "type" : "object",
      "description" : "Information on an email for the customer.",
      "properties" : {
        "email" : {
          "description" : "eMail deatils for the profile.",
          "$ref" : "#/definitions/emailType"
        },
        "id" : {
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "description" : "A reference to the type of object defined by the UniqueID elementSpace.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "emailType" : {
      "type" : "object",
      "description" : "Information on an email for the customer.",
      "properties" : {
        "emailAddress" : {
          "description" : "Defines the e-mail address.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        }
      }
    },
    "relationshipInfoSummaryType" : {
      "type" : "object",
      "description" : "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties" : {
        "relationshipProfile" : {
          "description" : "Refer to Relationship Profile Summary type document.",
          "$ref" : "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails" : {
          "description" : "Refer to Master Profile type document.",
          "$ref" : "#/definitions/masterAccountInfoType"
        },
        "relationshipID" : {
          "description" : "Relationship identifier.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "sourceRelation" : {
          "description" : "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceRelationDescription" : {
          "description" : "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "targetRelation" : {
          "description" : "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "targetRelationDescription" : {
          "description" : "Displays the description of the target relation(Target Profile).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        }
      }
    },
    "relationshipProfileSummaryType" : {
      "type" : "object",
      "properties" : {
        "customerName" : {
          "description" : "Name of the customer",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "companyName" : {
          "description" : "Name of the company.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "telephoneNumber" : {
          "description" : "Telephone number assigned to a single location",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "address" : {
          "description" : "Information on address details for the customer/company",
          "$ref" : "#/definitions/relationshipAddressType"
        },
        "emailAddress" : {
          "description" : "Defines the e-mail address.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "ownerCode" : {
          "description" : "Unique Code to identify the owner.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "profileIdList" : {
          "description" : "Original profile details for which the relationships was created",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "primary" : {
          "description" : "Indicates if this relationship is the primary relationship.",
          "type" : "boolean"
        },
        "profileStatus" : {
          "description" : "Status of the profile. Active/Inactive",
          "$ref" : "#/definitions/profileStatusType"
        },
        "primaryOwnerCode" : {
          "description" : "When true, this is a primary owner.",
          "type" : "boolean"
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType" : {
      "type" : "object",
      "description" : "Provides address information for a Relationship.",
      "properties" : {
        "addressLine" : {
          "description" : "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type" : "array",
          "maxItems" : 4,
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 80
          }
        },
        "city" : {
          "description" : "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "postalCode" : {
          "description" : "Post Office Code number.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 15
        },
        "state" : {
          "description" : "State or Province name (e.g., Texas).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "description" : "Country name (e.g., Ireland).",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        }
      }
    },
    "profileStatusType" : {
      "type" : "string",
      "enum" : [ "Active", "Inactive" ]
    },
    "profileTypeType" : {
      "type" : "string",
      "description" : "The types of Profile handled by the web service.",
      "enum" : [ "Guest", "Agent", "Company", "Group", "Source", "Employee", "Hotel", "Vendor", "Contact", "Purge", "BusinessHeader", "BillingAccount", "Activity", "Potential", "Account" ]
    },
    "masterAccountInfoType" : {
      "type" : "object",
      "properties" : {
        "masterAccountId" : {
          "description" : "Unique ID of the Master account.",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "masterAccountName" : {
          "description" : "Name of the Master account.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "reservationStayHistoryFutureInfoType" : {
      "type" : "object",
      "description" : "Information of History and Future Reservation details attached to Profiles.",
      "properties" : {
        "historyList" : {
          "description" : "Refer to History list type document.",
          "$ref" : "#/definitions/stayHistoryListType"
        },
        "futureList" : {
          "description" : "Refer to Future list type document.",
          "$ref" : "#/definitions/stayFutureListType"
        }
      }
    },
    "stayHistoryListType" : {
      "type" : "object",
      "description" : "A collection of reservation history details attached to Profiles.",
      "properties" : {
        "reservationInfo" : {
          "description" : "Additional reservation information attached to the profile . Eg : History reservation details",
          "type" : "array",
          "maxItems" : 4000,
          "items" : {
            "$ref" : "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore" : {
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type" : "boolean"
        },
        "totalResults" : {
          "description" : "Total number of rows queried",
          "type" : "integer"
        },
        "count" : {
          "description" : "Total number of rows returned",
          "type" : "integer"
        }
      }
    },
    "stayReservationInfoType" : {
      "type" : "object",
      "description" : "The Reservation class contains the current reservation being created or altered.",
      "properties" : {
        "reservationIdList" : {
          "description" : "Unique identifiers for the reservation for both internal and external systems",
          "$ref" : "#/definitions/reservationIdList"
        },
        "roomStay" : {
          "description" : "Collection of functionSpaceDetails stays.",
          "$ref" : "#/definitions/stayInfoType"
        },
        "attachedProfiles" : {
          "description" : "List of attached profiles",
          "$ref" : "#/definitions/resAttachedProfileListType"
        },
        "hotelId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "reservationStatus" : {
          "description" : "Indicates the status of the reservation.",
          "$ref" : "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus" : {
          "description" : "Indicates the status of the reservation.",
          "$ref" : "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "reservationIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      }
    },
    "stayInfoType" : {
      "type" : "object",
      "description" : "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties" : {
        "arrivalDate" : {
          "type" : "string",
          "format" : "date"
        },
        "departureDate" : {
          "type" : "string",
          "format" : "date"
        },
        "originalTimeSpan" : {
          "description" : "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "expectedTimes" : {
          "description" : "The expected arrival, return and departure times of the guest.",
          "$ref" : "#/definitions/resExpectedTimesType"
        },
        "adultCount" : {
          "description" : "A collection of Guest Counts associated with Room Stay.",
          "type" : "integer"
        },
        "childCount" : {
          "description" : "A collection of Child Counts associated with Room Stay.",
          "type" : "integer"
        },
        "roomClass" : {
          "description" : "Room class code",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roomType" : {
          "description" : "Room type code",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "componentRoomType" : {
          "description" : "True indicates functionSpaceDetails type is a component type.",
          "type" : "boolean"
        },
        "numberOfRooms" : {
          "description" : "Room Id",
          "type" : "integer"
        },
        "roomId" : {
          "description" : "Room Id",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "ratePlanCode" : {
          "description" : "Rate plan code",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rateAmount" : {
          "description" : "Rate amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "points" : {
          "description" : "The Points contains the number of points used to book a particular functionSpaceDetails type.",
          "$ref" : "#/definitions/pointsType"
        },
        "rateSuppressed" : {
          "description" : "Whether this rate should be suppressed from view",
          "type" : "boolean"
        },
        "reservationBlock" : {
          "description" : "Key information about the block for this reservation.",
          "$ref" : "#/definitions/reservationBlockType"
        },
        "bookingChannelCode" : {
          "description" : "Booking channel code",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "linkCode" : {
          "description" : "Party code",
          "type" : "string",
          "maxLength" : 2000
        },
        "fixedRate" : {
          "description" : "True if the rate is a fixed rate, otherwise false",
          "type" : "boolean"
        },
        "totalAmount" : {
          "description" : "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "guarantee" : {
          "description" : "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref" : "#/definitions/resGuaranteeType"
        },
        "promotion" : {
          "description" : "Promotion Codes",
          "$ref" : "#/definitions/promotionType"
        },
        "marketCode" : {
          "description" : "Market code",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "marketDescription" : {
          "description" : "Description of Market code",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "sourceCode" : {
          "description" : "Source of business",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceCodeDescription" : {
          "description" : "Description of the source of business.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "balance" : {
          "description" : "Balance amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "compBalance" : {
          "description" : "Comp Balance amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "roomTypeCharged" : {
          "description" : "Room type code that was charged",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "depositPayments" : {
          "description" : "A collection of deposit and/or payments for the Room Stay.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "guestServiceStatus" : {
          "description" : "Service Status of In House guest like DND or MUP",
          "$ref" : "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime" : {
          "description" : "Indicates that this reservation is scheduled for automated check out.",
          "type" : "string",
          "format" : "date"
        },
        "roomNumberLocked" : {
          "description" : "When true, indicates a functionSpaceDetails number cannot be changed. When false, indicates a functionSpaceDetails number may be changed.",
          "type" : "boolean"
        },
        "pseudoRoom" : {
          "description" : "True indicates as pseudo functionSpaceDetails type. This is usually used for a posting master reservation.",
          "type" : "boolean"
        },
        "assignedByAI" : {
          "description" : "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type" : "boolean"
        },
        "upgradedByAI" : {
          "description" : "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type" : "boolean"
        }
      }
    },
    "resExpectedTimesType" : {
      "type" : "object",
      "description" : "Holds the Arrival and Departure Time Information",
      "properties" : {
        "reservationExpectedArrivalTime" : {
          "description" : "Arrival Time",
          "type" : "string",
          "format" : "date-time"
        },
        "reservationExpectedDepartureTime" : {
          "description" : "Departure Time",
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "pointsType" : {
      "type" : "object",
      "description" : "The Redeem Points contains the number of points required to book a functionSpaceDetails type.",
      "properties" : {
        "awardsType" : {
          "description" : "Awards type for the award type rate code.",
          "type" : "string",
          "maxLength" : 2000
        },
        "points" : {
          "description" : "No of points required to book this Room Stay.",
          "type" : "integer"
        }
      }
    },
    "reservationBlockType" : {
      "type" : "object",
      "description" : "Key information about the block for a reservation.",
      "properties" : {
        "blockIdList" : {
          "description" : "Collection of unique block identifiers for the reservation.",
          "$ref" : "#/definitions/blockIdList"
        },
        "blockName" : {
          "description" : "The Name of the block that is attached to the reservation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "hotelId" : {
          "description" : "This is the HotelCode of the Block.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "resGuaranteeType" : {
      "type" : "object",
      "description" : "Validations type record returned after Validations are done.",
      "properties" : {
        "guaranteeCode" : {
          "description" : "Guarantee Code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "shortDescription" : {
          "description" : "Guarantee Code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 80
        },
        "onHold" : {
          "description" : "Guarantee Code.",
          "type" : "boolean"
        }
      }
    },
    "promotionType" : {
      "type" : "object",
      "description" : "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties" : {
        "promotionCode" : {
          "description" : "Promotion code associated with the rate plan.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "promotionName" : {
          "description" : "Promotion code Name associated with the rate plan.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "couponCode" : {
          "description" : "Promotion Coupon Code when promotion is setupCode to have a valid coupon code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "guestHousekeepingServiceRequestType" : {
      "type" : "string",
      "description" : "Possible values for the Guest Service Status.",
      "enum" : [ "DoNotDisturb", "MakeUpRoom", "NoStatusSelected" ]
    },
    "resAttachedProfileListType" : {
      "type" : "array",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "description" : "Attached profile name",
          "type" : "string",
          "maxLength" : 2000
        },
        "profileIdList" : {
          "description" : "Collection of unique profile identifiers",
          "$ref" : "#/definitions/profileIdList"
        },
        "reservationProfileType" : {
          "$ref" : "#/definitions/resProfileTypeType"
        }
      }
    },
    "profileIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      }
    },
    "resProfileTypeType" : {
      "type" : "string",
      "enum" : [ "Guest", "Company", "Group", "TravelAgent", "Source", "ReservationContact", "BillingContact", "Addressee" ]
    },
    "pMS_ResStatusType" : {
      "type" : "string",
      "description" : "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum" : [ "Reserved", "Requested", "NoShow", "Cancelled", "InHouse", "CheckedOut", "Waitlisted", "DueIn", "DueOut", "Walkin", "PendingCheckout" ]
    },
    "stayFutureListType" : {
      "type" : "object",
      "description" : "A collection of reservation history details attached to Profiles.",
      "properties" : {
        "reservationInfo" : {
          "description" : "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type" : "array",
          "maxItems" : 4000,
          "items" : {
            "$ref" : "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore" : {
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type" : "boolean"
        },
        "totalResults" : {
          "description" : "Total number of rows queried",
          "type" : "integer"
        },
        "count" : {
          "description" : "Total number of rows returned",
          "type" : "integer"
        }
      }
    },
    "eventFunctionSpaceType" : {
      "type" : "object",
      "description" : "Pertain Information about the Function Space for events.",
      "properties" : {
        "functionSpaceCode" : {
          "description" : "Function Space (event functionSpaceDetails) code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "functionSpaceDescription" : {
          "description" : "Function Space description.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "setupCode" : {
          "description" : "Setup style code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "setupDescription" : {
          "description" : "Setup Style description.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "setupTime" : {
          "description" : "Setup time in minutes.",
          "type" : "integer"
        },
        "setdownTime" : {
          "description" : "Setdown time in minutes.",
          "type" : "integer"
        },
        "rentalCode" : {
          "description" : "Rate Code for function space.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rateDesc" : {
          "description" : "Function Space Rate description.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "rentalAmount" : {
          "description" : "The functionSpaceDetails rent amount.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "discountPercentage" : {
          "description" : "Discount Percentage applied to Rent Amount.",
          "type" : "number",
          "minimum" : 0,
          "maximum" : 100
        },
        "minimumOccupancy" : {
          "description" : "Minimum Occupancy for the SetupCode of Catring Event.",
          "type" : "integer"
        },
        "maximumOccupancy" : {
          "description" : "Maximum Occupancy for the SetupCode of Catring Event.",
          "type" : "integer"
        },
        "shareable" : {
          "description" : "Flag to indicate if the event functionSpaceDetails is shareable.",
          "type" : "boolean"
        },
        "comboSpace" : {
          "description" : "Flag to indicate if the function space is a combination functionSpaceDetails.",
          "type" : "boolean"
        },
        "elementSpace" : {
          "description" : "Flag to indicate if the function space is an elementSpace of a comboSpace function space.",
          "type" : "boolean"
        }
      }
    },
    "eventNotesType" : {
      "type" : "array",
      "description" : "Pertain event information.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/eventNoteType"
      }
    },
    "eventNoteType" : {
      "type" : "object",
      "description" : "Pertain event's comment information.",
      "properties" : {
        "noteId" : {
          "description" : "Unique identifier for event comment. If it is missing, this indicate that it is a new comment. If only NotID is provided then it is a delete operation",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "noteCode" : {
          "description" : "Note code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "internal" : {
          "description" : "Indicates if comment are internal use only.",
          "type" : "boolean"
        },
        "noteTitle" : {
          "description" : "Pertain comment tile.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "comment" : {
          "description" : "Pertain comment text.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "sequence" : {
          "description" : "Pertain display sequence.",
          "type" : "integer"
        },
        "createDateTime" : {
          "description" : "Time stamp of the creation.",
          "type" : "string",
          "format" : "date-time"
        },
        "creatorId" : {
          "description" : "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "lastModifyDateTime" : {
          "description" : "Time stamp of last modification.",
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifierId" : {
          "description" : "Identifies the last software system or person to modify a record.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "purgeDate" : {
          "description" : "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type" : "string",
          "format" : "date",
          "maxLength" : 8
        }
      }
    },
    "lightEventsDetailType" : {
      "type" : "array",
      "description" : "Pertain event few information about events.",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/lightEventDetailType"
      }
    },
    "lightEventDetailType" : {
      "type" : "object",
      "description" : "Light Event Details.",
      "properties" : {
        "eventPrimaryInfo" : {
          "description" : "Pertain event primary information.",
          "$ref" : "#/definitions/eventPrimaryInfoType"
        },
        "eventDetail" : {
          "description" : "Pertain event information.",
          "$ref" : "#/definitions/eventDetailType"
        },
        "functionSpaceInformation" : {
          "description" : "Pertain event's function space information.",
          "$ref" : "#/definitions/eventFunctionSpaceType"
        }
      }
    },
    "eventRevenuesInformationType" : {
      "type" : "object",
      "description" : "Collection of revenue information about a catering event.",
      "properties" : {
        "eventRevenueInformation" : {
          "description" : "Revenue information about a catering event.",
          "type" : "array",
          "maxItems" : 4000,
          "items" : {
            "$ref" : "#/definitions/eventRevenueInformationType"
          }
        },
        "currencyCode" : {
          "description" : "Currency code when base currency of the property is different than the catering currency.",
          "type" : "string",
          "minLength" : 3,
          "maxLength" : 3
        },
        "excludeFromForecast" : {
          "description" : "Flag to indicate if the event revenue should be excluded from the forecast.",
          "type" : "boolean"
        },
        "useForecastRevenue" : {
          "description" : "Flag to indicate whether to only use the forecasted values when reporting, regardless of whether resources are booked on an event.",
          "type" : "boolean"
        },
        "eventLevelRevenueActualization" : {
          "description" : "Flag that indicates if actual revenue can be manually edited.",
          "type" : "boolean"
        }
      }
    },
    "eventRevenueInformationType" : {
      "type" : "object",
      "description" : "Pertain event's revenue information.",
      "properties" : {
        "revenueType" : {
          "description" : "Revenue type",
          "$ref" : "#/definitions/revenueTypeType"
        },
        "forecastRevenue" : {
          "description" : "Forecasted revenue.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "expectedRevenue" : {
          "description" : "Expected revenue.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "guaranteedRevenue" : {
          "description" : "Guaranteed revenue.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "onTheBooksRevenue" : {
          "description" : "On the books revenue.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "billedRevenue" : {
          "description" : "Billed revenue.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "actualRevenue" : {
          "description" : "Actual revenue.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "totalCost" : {
          "description" : "Total cost involved on this revenue.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "flatForecastRevenue" : {
          "description" : "Flag to indicate forecast revenue is a flat amount, therefore NOT per person.",
          "type" : "boolean"
        },
        "packaged" : {
          "description" : "Flag indicating if the revenues are generated by a catering package.",
          "type" : "boolean"
        },
        "orderBy" : {
          "description" : "Sort order for revenues.",
          "type" : "integer"
        }
      }
    },
    "revenueTypeType" : {
      "type" : "object",
      "description" : "Base type provides information about Catering Revenue Types Configuration.",
      "properties" : {
        "code" : {
          "description" : "Code is used to identify a Catering Revenue Type/Code.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "translatableDescription" : {
          "description" : "Translatable Description of the Catering Revenue Types.",
          "$ref" : "#/definitions/translationTextType200"
        },
        "displaySequence" : {
          "description" : "Revenue Types display sequence Number",
          "type" : "number"
        },
        "revenueGroup" : {
          "description" : "Revenue Group",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "foodAndBeverage" : {
          "description" : "Flag for Food and Beverages.",
          "type" : "boolean"
        },
        "inactive" : {
          "description" : "Indicates if the Revenue type Code is inactive.",
          "type" : "boolean"
        },
        "revenueDetails" : {
          "description" : "Collection of Revenue details assoicated to a Revenue Type (Additional Details)",
          "$ref" : "#/definitions/revenueTypeDetailsType"
        }
      }
    },
    "translationTextType200" : {
      "type" : "object",
      "description" : "Contains Multiple translated texts and language codes.",
      "properties" : {
        "defaultText" : {
          "description" : "Default text with Character length from 0 to 200.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 200
        },
        "translations" : {
          "description" : "List of translated text and language codes.",
          "$ref" : "#/definitions/translationsTextType"
        }
      }
    },
    "revenueTypeDetailsType" : {
      "type" : "array",
      "description" : "List of Revenue details assoicated to a Revenue Type (Additional Details)",
      "maxItems" : 4000,
      "items" : {
        "$ref" : "#/definitions/revenueTypeDetailType"
      }
    },
    "revenueTypeDetailType" : {
      "type" : "object",
      "description" : "Details type provides information about Catering Revenue Type Details.",
      "properties" : {
        "hotelId" : {
          "description" : "Hotel Code is used to set associated revenue type details.",
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    }
  },
  "tags" : [ {
    "name" : "EventManagement",
    "description" : "The Event APIs will allow you to retrieve, create, manage and delete events and related event functionality such as event resources, catering packages and even event waitlists."
  } ]
}