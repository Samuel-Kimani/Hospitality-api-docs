{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Cashiering API",
    "description": "APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br />Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2022 Oracle and/or its affiliates.</p>",
    "version": "21.5.0.0",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/csh/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hotels/{hotelId}/depositTransactions": {
      "get": {
        "summary": "Get Deposit Folio Transaction Details",
        "description": "You can use this API to get Deposit Folio Transaction Details. <p><strong>OperationId:</strong>getDepositFolioTransactionDetails</p>",
        "operationId": "getDepositFolioTransactionDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel",
            "x-example": ""
          },
          {
            "name": "includeGenerates",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the automatically generated transactions, related to the main transaction number above, are also to be retrieved as part of this request.",
            "type": "boolean"
          },
          {
            "name": "transactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Number of the transaction(posting) for which details are required.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeExchangeInformation",
            "in": "query",
            "required": false,
            "description": "Flag to indicate what currency exchange information text needs to be included in response.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
            "schema": {
              "$ref": "#/definitions/depositFolioTransactionDetails"
            }
          },
          "204": {
            "description": "DepositFolioTransactionDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/financialPostings": {
      "get": {
        "summary": "Get Financial Postings",
        "description": "You can use this API to get Financial postings. <p><strong>OperationId:</strong>getFinancialPostings</p>",
        "operationId": "getFinancialPostings",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel",
            "x-example": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "filterTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "filterRoomNumber",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "referenceNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filters the results for reference number.",
            "type": "string"
          },
          {
            "name": "checkNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for Cheque number's code.",
            "type": "string"
          },
          {
            "name": "supplementWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for supplement.",
            "type": "string"
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "Filters the results for approval code.",
            "type": "string"
          },
          {
            "name": "approvalStatusCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Filters the result to only include transactions in this window number.",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeededAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "closureNo",
            "in": "query",
            "required": false,
            "description": "Filters the result to only display the postings that were made during the cashier closure range",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching the Posting Journal.",
            "schema": {
              "$ref": "#/definitions/financialPostings"
            }
          },
          "204": {
            "description": "FinancialPostings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/revenue": {
      "get": {
        "summary": "Get Hotel Revenue",
        "description": "You can use this API to get Hotel Revenue. <p><strong>OperationId:</strong>getHotelRevenue</p>",
        "operationId": "getHotelRevenue",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel",
            "x-example": ""
          },
          {
            "name": "businessDate",
            "in": "query",
            "required": false,
            "description": "Business date.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for hotel room revenue for all HHonors redemption reservation.",
            "schema": {
              "$ref": "#/definitions/hotelRevenueDetails"
            }
          },
          "204": {
            "description": "HotelRevenue not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodes": {
      "get": {
        "summary": "Get Transaction Codes",
        "description": "You can use this API to retrieve a list of Transaction Codes configured for a property. <p><strong>OperationId:</strong>getTransactionCodes</p>",
        "operationId": "getTransactionCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel",
            "x-example": ""
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ]
          },
          {
            "name": "includeArticles",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if Article Codes are required, along with the parent Transaction Codes.",
            "type": "boolean"
          },
          {
            "name": "userRoleTransactions",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if it is allowed to manually post transaction codes.",
            "type": "boolean"
          },
          {
            "name": "manualPostAllowed",
            "in": "query",
            "required": false,
            "description": "Flag to include the search for Manual Post Allowed.",
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Codes.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Code Description.",
            "type": "string"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "The Fiscal Bill number of this posting",
            "type": "string"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folioNo",
            "in": "query",
            "required": false,
            "description": "Folio Number.",
            "type": "number"
          },
          {
            "name": "folioStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ]
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "required": false,
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string"
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "required": false,
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response that contains either the Transaction Code list if fetch was successful or error(s) if not.",
            "schema": {
              "$ref": "#/definitions/transactionCodes"
            }
          },
          "204": {
            "description": "TransactionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions": {
      "get": {
        "summary": "Get Guests Transactions",
        "description": "You can use this API to get  Guests Transactions. <p><strong>OperationId:</strong>getGuestsTransactions</p>",
        "operationId": "getGuestsTransactions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel",
            "x-example": ""
          },
          {
            "name": "reservationList",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "includeGenerates",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions that are auto generated like taxes.",
            "type": "boolean"
          },
          {
            "name": "includeTransactionsWithARInvoiceNo",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions that are included in an Accounts Receivable invoice.",
            "type": "boolean"
          },
          {
            "name": "includeTransactionsWithFolioNo",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions that already belongs to a folio.",
            "type": "boolean"
          },
          {
            "name": "includeTransactionsWithManualPostingOnly",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions whose transaction codes have manual posting enabled, or when an adjustment code is attached to the transaction code, the adjustment code's manual posting is enabled.",
            "type": "boolean"
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction number of the payment being corrected.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Category of the transaction code to filter the result.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Sub category of the transaction code to filter the result.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "billingCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel context of the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "desc",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Billing Instruction code description.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "trxCodeWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Code/s.",
            "type": "string"
          },
          {
            "name": "trxDescriptionWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Code's Description.",
            "type": "string"
          },
          {
            "name": "checkNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Cheque number's code.",
            "type": "string"
          },
          {
            "name": "referenceNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filters the results for reference number.",
            "type": "string"
          },
          {
            "name": "supplementWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for supplement.",
            "type": "string"
          },
          {
            "name": "windowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Filters the result to only include transactions in this window number.",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "cashieringTransactionType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Wrapper Transaction Type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Revenue",
                "Payment",
                "Wrapper"
              ]
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "commissionable",
            "in": "query",
            "required": false,
            "description": "Filters the result based on its commission property. Do not set this criteria if all transactions should be included whether or not they are commissionable.",
            "type": "boolean"
          },
          {
            "name": "serviceRecoveryAllowed",
            "in": "query",
            "required": false,
            "description": "Filters the result which are allow for service recovery.",
            "type": "boolean"
          },
          {
            "name": "postedTransactionType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Returns only postings without bill number.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "All",
                "Routed",
                "Direct",
                "Transferred",
                "Payments",
                "NonBilled"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Lists a summary of transactions of guests.",
            "schema": {
              "$ref": "#/definitions/guestsTransactions"
            }
          },
          "204": {
            "description": "GuestsTransactions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "depositFolioTransactionDetails": {
      "type": "object",
      "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
      "properties": {
        "transactions": {
          "description": "The details regarding the transaction(Posting).",
          "$ref": "#/definitions/depositDetailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositDetailPostingsType": {
      "type": "array",
      "description": "List of Deposit Postings with details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/depositDetailPostingType"
      }
    },
    "depositDetailPostingType": {
      "type": "object",
      "description": "Posting information of the transaction .",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "depositPolicy": {
          "description": "Deposit Policy information if this payment was applied to a deposit policy.",
          "$ref": "#/definitions/resDepositPolicyType"
        },
        "comments": {
          "description": "User defined comments for the deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "receiptSummaryInfo": {
          "description": "Information regarding receipt of the posted deposit",
          "$ref": "#/definitions/receiptSummaryType"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "transferred": {
          "description": "Indicates if the deposit was transferred either to a reservation or from a reservation.",
          "type": "boolean"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "subPostings": {
          "description": "SubPostings for the posting.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "currencyExchangeInfo": {
          "description": "Currency exchange information if the posting was made using a currency different from the default currency.",
          "$ref": "#/definitions/transactionCurrencyExchangeInfoType"
        },
        "miscellaneousInfo": {
          "type": "object",
          "properties": {
            "createDateTime": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "paidOut": {
              "type": "boolean"
            }
          }
        },
        "internalFolioWindowID": {
          "description": "Internal Unique id for the Folio Window.",
          "type": "string"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "cashieringTransactionTypeType": {
      "type": "string",
      "description": "Wrapper Transaction Type.",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "cashierInfoType": {
      "type": "object",
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "postingGroupType": {
      "type": "object",
      "description": "Transaction group information. Ever posting could represent a. Regular transaction b. Group header - has Group Id, Count, Descripton and Includes Group Memebers elements c. Group transaction - has SubGroupId element pointing to Group Header Id",
      "properties": {
        "groupId": {
          "description": "Group Id.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupCount": {
          "description": "Number of transactions in group.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Group Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "subGroupId": {
          "description": "Indicates to which group transaction belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "compPostingsType": {
      "type": "object",
      "description": "Collection of comp postings.",
      "properties": {
        "authorizer": {
          "description": "Authorizer name of the Comp Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "approvalStatus": {
          "description": "Approval status of the comp account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "exchangeAmounts": {
      "type": "object",
      "description": "Converted values for the Exchange Currency requested.",
      "properties": {
        "debitAmount": {
          "description": "The converted Guest Ledger Debit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditAmount": {
          "description": "The converted Guest Ledger Credit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resDepositPolicyType": {
      "type": "object",
      "description": "A deposit policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositCancelRevenueType": {
      "type": "string",
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositPolicyType": {
      "type": "object",
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        }
      }
    },
    "policyAmountPercentType": {
      "type": "object",
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "properties": {
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "policyBasisTypeType": {
      "type": "string",
      "description": "Full Amount.",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "policyDeadlineType": {
      "type": "object",
      "description": "Cancellation deadline, absolute or relative.",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "receiptSummaryType": {
      "type": "object",
      "description": "Contains Receipt Details.",
      "properties": {
        "payeeInfo": {
          "description": "Payee information for the Receipt.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "receiptAmount": {
          "description": "Receipt gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "customNumbers": {
          "description": "Custom Number.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          }
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "Receipt Number.",
          "type": "number"
        },
        "receiptTypeDescription": {
          "description": "Receipt Type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "transactionNo": {
          "description": "Transaction Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "receiptType": {
          "description": "Receipt Type.",
          "$ref": "#/definitions/receiptType"
        },
        "taxInvoice": {
          "description": "Tax Invoice Number of the Receipt.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "receiptType": {
      "type": "string",
      "description": "This contains the receipt type.",
      "enum": [
        "Payment",
        "Deposit",
        "Paidout",
        "Transaction",
        "CheckExchange",
        "CurrencyExchangeCheck",
        "CurrencyExchangeCash",
        "DepositRequest",
        "DepositRefundReceipt",
        "Acknowledgement"
      ]
    },
    "summaryPostingsType": {
      "type": "array",
      "description": "List of postings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/summaryPostingType"
      }
    },
    "summaryPostingType": {
      "type": "object",
      "description": "Posting details.",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "groupByCount": {
          "description": "When some SummaryPostingsGroupBy element is send as request ,then this element will represent how many transactions rolled up into this Summary Posting Type.",
          "type": "number"
        },
        "folioWindowNo": {
          "description": "The Folio Window number of this posting.",
          "type": "integer"
        }
      }
    },
    "transactionCurrencyExchangeInfoType": {
      "type": "object",
      "description": "Details of the Exchange Information for this transaction, if the posting was made in a currency different from the default currency.",
      "properties": {
        "description": {
          "description": "Description or reference for this exchange.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "exchangeRate": {
          "description": "The Buying rate used for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "currencyAmount": {
          "description": "The foreign currency amount posted for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "description": "The converted default currency amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionPercent": {
          "description": "Percentage for commission used for the currency conversion.",
          "type": "number"
        },
        "code": {
          "description": "Foreign Currency Code of the currency which was used to post this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "exchangeDate": {
          "description": "The date when this exchange rate was set.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "financialPostings": {
      "type": "object",
      "description": "Response for fetching the Posting Journal.",
      "properties": {
        "journalPostings": {
          "description": "Journal entries of the response.",
          "$ref": "#/definitions/financialPostingsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "financialPostingsType": {
      "type": "object",
      "description": "Collection of Reservations and their information.",
      "properties": {
        "postings": {
          "$ref": "#/definitions/detailPostingsType"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "totalDebit": {
          "description": "Indicates the Total Sum of Journal Debits.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCredit": {
          "description": "Indicates the Total Sum of Journal Credits.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "overallTotal": {
          "description": "Indicates the Total Sum of Journal entries in a page.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalForAllPages": {
          "description": "Indicates the Total Sum of all Journal entries in all pages.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalEntriesCount": {
          "description": "Indicates the number of journal entries.",
          "type": "integer"
        }
      }
    },
    "detailPostingsType": {
      "type": "array",
      "description": "Details of the transaction(Posting).",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/detailPostingType"
      }
    },
    "detailPostingType": {
      "type": "object",
      "description": "Posting information of the transaction.",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetHotel": {
          "description": "Cross property posting hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "subPostings": {
          "description": "SubPostings for the posting.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "guestInfo": {
          "description": "Details of the Guest information where this transaction was posted to.",
          "type": "object",
          "properties": {
            "profileId": {
              "description": "Profile Id corresponding to the guest name. It is sometimes possible to have a guest name but the profile id is null.",
              "$ref": "#/definitions/profileId"
            },
            "reservationId": {
              "description": "Reservation Id corresponding to the guest name. It is sometimes possible to have a room number but the reservation id is null.",
              "$ref": "#/definitions/reservationId"
            },
            "guestName": {
              "description": "Guest name associated with the transaction.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "roomId": {
              "description": "Room number associated with the transaction.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "confirmationNo": {
              "description": "Confirmation number associated with the transaction.",
              "type": "string",
              "minLength": 0,
              "maxLength": 50
            }
          }
        },
        "aRInfo": {
          "description": "Details of the AR account if the posting was part of an AR invoice.",
          "$ref": "#/definitions/transactionARInfoType"
        },
        "currencyExchangeInfo": {
          "description": "Currency exchange information if the posting was made using a currency different from the default currency.",
          "$ref": "#/definitions/transactionCurrencyExchangeInfoType"
        },
        "adjustmentInfo": {
          "description": "Details regarding the adjustment made if the current transaction was created as a result of an adjustment.",
          "$ref": "#/definitions/transactionAdjustmentInfoType"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "miscellaneousInfo": {
          "type": "object",
          "properties": {
            "createDateTime": {
              "type": "string",
              "format": "date-time"
            },
            "covers": {
              "type": "string",
              "minLength": 0,
              "maxLength": 10
            }
          }
        },
        "exchangeInformation": {
          "description": "Exchange Information - text presentation of the exchange operation including formula, buy rate, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internalFolioWindowID": {
          "description": "Internal Unique id for the Folio Window.",
          "type": "string"
        },
        "revisionNo": {
          "type": "number"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "transactionARInfoType": {
      "type": "object",
      "description": "Details of the AR account where this transaction was posted to.",
      "properties": {
        "accountNumber": {
          "description": "AR Account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountName": {
          "description": "The Account name where this invoice is sent.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "invoiceNo": {
          "description": "The invoice number which includes this transaction.",
          "type": "number"
        }
      }
    },
    "transactionAdjustmentInfoType": {
      "type": "object",
      "description": "Adjustment details of the transaction, if the transaction was created as part of an adjustment.",
      "properties": {
        "reason": {
          "description": "Reason for the adjustment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "departmentCode": {
          "description": "Department code for service recovery",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Adjustment code used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelRevenueDetails": {
      "type": "object",
      "description": "Response object for hotel room revenue for all HHonors redemption reservation.",
      "properties": {
        "hotelRevenue": {
          "description": "Hotel Room Revenue type.",
          "$ref": "#/definitions/hotelRevenueType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRevenueType": {
      "type": "object",
      "description": "Hotel revenue type.",
      "properties": {
        "roomRevenue": {
          "description": "Total room revenue for this hotel.",
          "type": "number"
        },
        "houseRevenue": {
          "description": "Total house revenue for this hotel.",
          "type": "number"
        },
        "compRevenue": {
          "description": "Total comp revenue for this hotel.",
          "type": "number"
        },
        "occupiedRooms": {
          "description": "Total occupied revenue for this hotel.",
          "type": "number"
        },
        "houseRooms": {
          "description": "Total house rooms for this hotel.",
          "type": "number"
        },
        "compRooms": {
          "description": "Total comp rooms for this hotel.",
          "type": "number"
        },
        "zeroRoomsRevenue": {
          "description": "Total zero rooms revenue for this hotel.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The base currency code for this hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transactionCodes": {
      "type": "object",
      "description": "Response that contains either the Transaction Code list if fetch was successful or error(s) if not.",
      "properties": {
        "trxCodes": {
          "description": "List of TransactionCode. Contains information on Transaction Code, TransactionCode Description Its Group and Sub Group.",
          "$ref": "#/definitions/trxCodesPostingInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxCodesPostingInfoType": {
      "type": "array",
      "description": "List of TransactionCodes",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxPostingInfoType"
      }
    },
    "trxPostingInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "price": {
          "description": "Default price of that transaction code.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "minimumPrice": {
          "description": "Minimum quantity needs to be posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "maximumPrice": {
          "description": "Maximum quantity limitation of posting.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "guestsTransactions": {
      "type": "object",
      "description": "Lists a summary of transactions of guests.",
      "properties": {
        "reservationFolioInformation": {
          "description": "Folio details for the requested reservation/s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationFolioInfoType"
          }
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationFolioInfoType": {
      "type": "object",
      "description": "Each folio will include summary and/or detailed information.",
      "properties": {
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "folioWindows": {
          "description": "The Folio Window information of the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "folioHistory": {
          "description": "Folio History element contains all generated folios",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "postStayChargeAllowed": {
          "description": "Computed flag specifying that the reservation has met the criteria which allows charges to be posted after being checked-out.",
          "type": "boolean"
        },
        "preStayChargeAllowed": {
          "description": "Computed flag specifying that the reservation has met the criteria which allows charges to be posted before checking-in.",
          "type": "boolean"
        },
        "autoCheckInAllowed": {
          "description": "Flag specifying that the reservation can be auto check in when Auto Checkin Pseudo Room parameter is active.",
          "type": "boolean"
        },
        "postToNoShowCancelAllowed": {
          "description": "Flag specifying that the reservation can post if the reservation status was No Show or Cancelled.",
          "type": "boolean"
        },
        "stampDutyExists": {
          "description": "Stamp Duty posted in at least one folio window.",
          "type": "boolean"
        },
        "roomAndTaxPosted": {
          "description": "Flag to check if the room and tax are already posted.",
          "type": "boolean"
        }
      }
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the ‘true’ or ‘false’ values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 40
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "folioWindowType": {
      "type": "object",
      "description": "A folio window view which holds the set of folios for a reservation.",
      "properties": {
        "revenue": {
          "description": "Revenue amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "Payment amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitRevenue": {
          "description": "Revenue debit amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitPayment": {
          "description": "Payment debit amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitBalance": {
          "description": "Running debit balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/folioWindowExchangeAmounts"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this window.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "compAccountingInfo": {
          "description": "Defined comp accounting configuration for this window",
          "$ref": "#/definitions/compAccountingType"
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "fiscalFolioInstruction": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "folios": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioType"
          }
        },
        "vATOffsetAmount": {
          "description": "VAT offset amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "serviceTypeInfo": {
          "description": "Contains service type information associated with transaction code posted in folio window.",
          "$ref": "#/definitions/transactionServiceTypesType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "emptyFolio": {
          "description": "Flag to notify if the current folio has any postings.",
          "type": "boolean"
        },
        "emptyWindow": {
          "description": "Flag to notify if the entire window has any postings.",
          "type": "boolean"
        },
        "simpleFolio": {
          "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
          "type": "boolean"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "folioWindowExchangeAmounts": {
      "type": "object",
      "description": "Converted folio windows values for the Exchange Currency requested.",
      "properties": {
        "revenue": {
          "description": "The converted Folio Window Revenue Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "The converted Folio Window Payment Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "The converted Folio Window Total Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "compAccountingType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "aRNumber": {
          "description": "AR Account Number of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTypeCode": {
          "description": "The Comp Type for this Account. Used when using the Comp types functionality",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compVoucherNo": {
          "description": "The coupon or voucher number used by the external gaming system to track postings made to this routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "dateRange": {
          "description": "Arrival date range for comp routing",
          "$ref": "#/definitions/dateRangeType"
        },
        "membershipId": {
          "description": "Membership number",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "membershipIdNo": {
          "description": "Unique Id of membership",
          "type": "integer"
        },
        "membershipNameOnCard": {
          "description": "Name displayed on the membership card",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fiscalResponseType": {
      "type": "object",
      "description": "Provides information which is used for fiscal response processing.",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "retryFiscalPrinting": {
          "description": "Flag to do the retrieval process of fiscal printing or not.",
          "type": "boolean"
        }
      }
    },
    "fiscalFolioInstruction": {
      "type": "string",
      "description": "Action to generate Offline folio when no reponse is received from fiscal service.",
      "enum": [
        "Retry",
        "New",
        "Void",
        "Offline"
      ]
    },
    "folioType": {
      "type": "object",
      "description": "Represents a single page in a reservation's ledger which will contain transactions and payee information.",
      "properties": {
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "postings": {
          "description": "Postings for the folio view.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "folioAmount": {
          "description": "Folio gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowConvertFolioYn": {
          "description": "Flag to check Folio Conversion Allowed.",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revisionNo": {
          "description": "Folio Revison number.",
          "type": "number"
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        }
      }
    },
    "folioStatusType": {
      "type": "string",
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "transactionServiceTypesType": {
      "type": "array",
      "description": "Details about service type postings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionServiceTypeType"
      }
    },
    "transactionServiceTypeType": {
      "type": "object",
      "description": "Containsts service type posting information.",
      "properties": {
        "serviceType": {
          "description": "Contains service type code attached with transaction code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "revenue": {
          "description": "Revenue amount of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "Payment amount of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Running balance of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPostings": {
          "description": "Running total number of the service type.",
          "type": "integer"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    }
  },
  "tags": [
    {
      "name": "Cashiering",
      "description": "Cashiering module provides APIs to service front desk billing requirements, as well as any requirements related to a reservation's folio. You can retrieve a guest folio, post billing charges to guest folio, add routing instructions to a reservation, view authorization history, all the way through to checking the guest out using the postCheckOut API."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}