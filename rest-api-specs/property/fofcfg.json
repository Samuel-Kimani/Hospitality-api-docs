{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Front Desk Configuration API",
    "description": "APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br />Compatible with OPERA Cloud release 21.5.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2022 Oracle and/or its affiliates.</p>",
    "version": "21.5.0.0",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/fof/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/articles": {
      "put": {
        "summary": "Operation to change Articles.",
        "description": "Operation to change articles. <p><strong>OperationId:</strong>putArticles</p>",
        "operationId": "putArticles",
        "parameters": [
          {
            "name": "articles",
            "in": "body",
            "required": true,
            "description": "Request to change articles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Articles.",
        "description": "Operation to create articles. <p><strong>OperationId:</strong>postArticles</p>",
        "operationId": "postArticles",
        "parameters": [
          {
            "name": "articles",
            "in": "body",
            "required": true,
            "description": "Request to create articles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch Articles.",
        "description": "Operation to fetch articles. <p><strong>OperationId:</strong>getArticles</p>",
        "operationId": "getArticles",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "articleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code search criteria.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching articles.",
            "schema": {
              "$ref": "#/definitions/articlesInfo"
            }
          },
          "204": {
            "description": "Articles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete Articles.",
        "description": "Operation to remove articles. <p><strong>OperationId:</strong>deleteArticles</p>",
        "operationId": "deleteArticles",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "articleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "articleHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "x-example": [
              "false"
            ],
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableForPostIt",
            "in": "query",
            "required": false,
            "description": "Indicates whether the article is available for post it.",
            "type": "boolean"
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ]
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/authorizationConfigRule": {
      "put": {
        "summary": "Operation to change AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>putAuthorizationConfigRule</p>",
        "operationId": "putAuthorizationConfigRule",
        "parameters": [
          {
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "description": "Request object to change authorization rule.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>postAuthorizationConfigRule</p>",
        "operationId": "postAuthorizationConfigRule",
        "parameters": [
          {
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "description": "Request object to create new authorization rule for given hotel code.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>deleteAuthorizationConfigRule</p>",
        "operationId": "deleteAuthorizationConfigRule",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with authorization rule",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Authorization rule Room type.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomClassHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceCodeHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rateCategory",
            "in": "query",
            "required": false,
            "description": "Rate category Code.",
            "type": "string"
          },
          {
            "name": "rateCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Rate code associated to this rule.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "guaranteeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Guarantee code associated to this rule.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/authorizerGroups": {
      "put": {
        "summary": "Operation to change AuthorizerGroups.",
        "description": "Operation to change Authorizer Groups. <p><strong>OperationId:</strong>putAuthorizerGroups</p>",
        "operationId": "putAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroupsToChange",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Authorizer Group Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroupsToChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AuthorizerGroups.",
        "description": "Operation to create Authorizer Groups. <p><strong>OperationId:</strong>postAuthorizerGroups</p>",
        "operationId": "postAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Authorizer Group Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch AuthorizerGroups.",
        "description": "Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getAuthorizerGroups</p>",
        "operationId": "getAuthorizerGroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "authorizerGroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Authorizer Groups.",
            "schema": {
              "$ref": "#/definitions/authorizerGroups"
            }
          },
          "204": {
            "description": "AuthorizerGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AuthorizerGroups.",
        "description": "Operation to remove Authorizer Groups. <p><strong>OperationId:</strong>deleteAuthorizerGroups</p>",
        "operationId": "deleteAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroup",
            "in": "query",
            "required": false,
            "description": "Configuration code.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/autoFolioSettlementTypes": {
      "get": {
        "summary": "Get Auto Folio Settlement Types",
        "description": "Use this API to get Auto Folio Settlement Types. <p><strong>OperationId:</strong>getAutoFolioSettlementTypes</p>",
        "operationId": "getAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Auto Folio Settlement Types.",
            "schema": {
              "$ref": "#/definitions/autoFolioSettlementTypesDetails"
            }
          },
          "204": {
            "description": "AutoFolioSettlementTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Auto Folio Settlement Types",
        "description": "Use this API to create Auto Folio Settlement Types. <p><strong>OperationId:</strong>postAutoFolioSettlementTypes</p>",
        "operationId": "postAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "autoFolioSettlementTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Auto Folio Settlement Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/autoFolioSettlementTypes/{code}": {
      "put": {
        "summary": "Change Auto Folio Settlement Types",
        "description": "Use this API to update Auto Folio Settlement Types. <p><strong>OperationId:</strong>putAutoFolioSettlementTypes</p>",
        "operationId": "putAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Auto Folio Settlement Types."
          },
          {
            "name": "autoFolioSettlementTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Auto Folio Settlement Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Auto Folio Settlement Types",
        "description": "Use this API to delete Auto Folio Settlement Types. <p><strong>OperationId:</strong>deleteAutoFolioSettlementTypes</p>",
        "operationId": "deleteAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Auto Folio Settlement Types."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/cashierDetails/cashiers": {
      "get": {
        "summary": "Operation to fetch Cashiers.",
        "description": "The operation accepts Cashier fetch request and returns Cashiers' list that match the criteria. <p><strong>OperationId:</strong>getCashiers</p>",
        "operationId": "getCashiers",
        "parameters": [
          {
            "name": "cashierIDs",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Numberic code for cashier ID.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "x-example": [
              "54"
            ],
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Partial name of a cashier.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive cashiers in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching information regarding Cashiers.",
            "schema": {
              "$ref": "#/definitions/cashiersDetails"
            }
          },
          "204": {
            "description": "Cashiers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/cashiers": {
      "put": {
        "summary": "Operation to change CashiersDetails.",
        "description": "This Operation to Change a Cashier. <p><strong>OperationId:</strong>putCashiers</p>",
        "operationId": "putCashiers",
        "parameters": [
          {
            "name": "cashiers",
            "in": "body",
            "required": true,
            "description": "Request objects for modifying cashiers",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Cashiers.",
        "description": "Operation to Create Cashier. <p><strong>OperationId:</strong>postCashiers</p>",
        "operationId": "postCashiers",
        "parameters": [
          {
            "name": "cashiers",
            "in": "body",
            "required": true,
            "description": "Request object for creating cashiers.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/cashiers/nextAvailable": {
      "get": {
        "summary": "Operation to fetch AvailableCashierNumber.",
        "description": "The operation returns a next available Cashier Number to be used while creating a new Cashier. <p><strong>OperationId:</strong>getAvailableCashierNumber</p>",
        "operationId": "getAvailableCashierNumber",
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object that returns next available cashier number.",
            "schema": {
              "$ref": "#/definitions/cashierNumber"
            }
          },
          "204": {
            "description": "AvailableCashierNumber not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/commissionCodes": {
      "get": {
        "summary": "Operation to fetch commission codes.",
        "description": " <p><strong>OperationId:</strong>getCommissionCodes</p>",
        "operationId": "getCommissionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "commissionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching commission codes.",
            "schema": {
              "$ref": "#/definitions/commissionCodesSummary"
            }
          },
          "204": {
            "description": "CommissionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change commission codes.",
        "description": " <p><strong>OperationId:</strong>putCommissionCodes</p>",
        "operationId": "putCommissionCodes",
        "parameters": [
          {
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "description": "Request object to update commission codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create commission codes.",
        "description": " <p><strong>OperationId:</strong>postCommissionCodes</p>",
        "operationId": "postCommissionCodes",
        "parameters": [
          {
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "description": "Request object to create new commission codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove commission codes.",
        "description": " <p><strong>OperationId:</strong>deleteCommissionCodes</p>",
        "operationId": "deleteCommissionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property of the commission code.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "commissionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Commission code for which details are deleted.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/compTypes": {
      "post": {
        "summary": "Operation to Create Comp Types",
        "description": "Operation to Create Comp Types <p><strong>OperationId:</strong>postCompTypes</p>",
        "operationId": "postCompTypes",
        "parameters": [
          {
            "name": "compTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating CompTypes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to Change Comp Types.",
        "description": "Operation to Change Comp Types. <p><strong>OperationId:</strong>changeCompTypes</p>",
        "operationId": "changeCompTypes",
        "parameters": [
          {
            "name": "compTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Comp Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/compTypesStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/compTypes/codes/{compTypesCode}": {
      "delete": {
        "summary": "Operation to Remove Comp Types.",
        "description": "Operation to Remove Comp Types. <p><strong>OperationId:</strong>removeCompTypes</p>",
        "operationId": "removeCompTypes",
        "parameters": [
          {
            "name": "compTypesCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Comp Types Code to be deleted."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/configBankAccounts": {
      "get": {
        "summary": "Operation to fetch config bank accounts.",
        "description": " <p><strong>OperationId:</strong>getConfigBankAccounts</p>",
        "operationId": "getConfigBankAccounts",
        "parameters": [
          {
            "name": "hotels",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "bankCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Bank Accounts",
            "schema": {
              "$ref": "#/definitions/bankAccountsInfo"
            }
          },
          "204": {
            "description": "ConfigBankAccounts not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change config bank accounts.",
        "description": " <p><strong>OperationId:</strong>putConfigBankAccounts</p>",
        "operationId": "putConfigBankAccounts",
        "parameters": [
          {
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "description": "Request object to edit Bank Accounts",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove config bank accounts.",
        "description": " <p><strong>OperationId:</strong>deleteConfigBankAccounts</p>",
        "operationId": "deleteConfigBankAccounts",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property of the bank account.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "bankAccountID",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Bank account ID.",
            "items": {
              "type": "number"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create config bank accounts.",
        "description": " <p><strong>OperationId:</strong>postConfigBankAccounts</p>",
        "operationId": "postConfigBankAccounts",
        "parameters": [
          {
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "description": "Request object to create Bank Accounts",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/creditCardInfo": {
      "get": {
        "summary": "Operation to fetch CreditCardInfo.",
        "description": " <p><strong>OperationId:</strong>getCreditCardInfo</p>",
        "operationId": "getCreditCardInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cardIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "cardIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "cardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accessTransactionType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Respose for the fetch credit card information.",
            "schema": {
              "$ref": "#/definitions/creditCardInfo"
            }
          },
          "204": {
            "description": "CreditCardInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/currencyExchangeServiceTaxes": {
      "put": {
        "summary": "Operation to change ExchangeServiceTaxes.",
        "description": "Operation to change currency exchange service taxes. <p><strong>OperationId:</strong>putCurrencyExchangeServiceTaxes</p>",
        "operationId": "putCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "description": "Request object for changing currency exchange service taxes",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create CurrencyExchangeServiceTaxes.",
        "description": "Operation to create currency exchange service taxes. <p><strong>OperationId:</strong>postCurrencyExchangeServiceTaxes</p>",
        "operationId": "postCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new currency exchange service taxes",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch CurrencyExchangeServiceTaxes.",
        "description": "Operation to fetch currency exchange service taxes. <p><strong>OperationId:</strong>getCurrencyExchangeServiceTaxes</p>",
        "operationId": "getCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch currency exchange service taxes",
            "schema": {
              "$ref": "#/definitions/currencyExchangeServiceTaxes"
            }
          },
          "204": {
            "description": "CurrencyExchangeServiceTaxes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete CurrencyExchangeServiceTaxes.",
        "description": "Operation to remove currency exchange service taxes. <p><strong>OperationId:</strong>deleteCurrencyExchangeServiceTaxes</p>",
        "operationId": "deleteCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with currency exchange service tax",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "currencyExchangeServiceTaxCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Currency exchange service tax code",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/customTaxTypes": {
      "get": {
        "summary": "Get Custom Tax Types",
        "description": "Use this API to get Custom Tax Types. <p><strong>OperationId:</strong>getCustomTaxTypes</p>",
        "operationId": "getCustomTaxTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Custom Tax Types.",
            "schema": {
              "$ref": "#/definitions/customTaxTypesDetails"
            }
          },
          "204": {
            "description": "CustomTaxTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Custom Tax Types",
        "description": "Use this API to create Custom Tax Types. <p><strong>OperationId:</strong>postCustomTaxTypes</p>",
        "operationId": "postCustomTaxTypes",
        "parameters": [
          {
            "name": "customTaxTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Custom Tax Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/customTaxTypes/{taxTypeCode}": {
      "put": {
        "summary": "Change Custom Tax Types",
        "description": "Use this API to update Custom Tax Types. <p><strong>OperationId:</strong>changeCustomTaxTypes</p>",
        "operationId": "changeCustomTaxTypes",
        "parameters": [
          {
            "name": "taxTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Tax Types."
          },
          {
            "name": "customTaxTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Custom Tax Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Custom Tax Types",
        "description": "Use this API to delete Custom Tax Types. <p><strong>OperationId:</strong>removeCustomTaxTypes</p>",
        "operationId": "removeCustomTaxTypes",
        "parameters": [
          {
            "name": "taxTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Tax Types."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/dailyPlanCodes": {
      "put": {
        "summary": "Operation to change DailyPlanCodes.",
        "description": " <p><strong>OperationId:</strong>putDailyPlanCodes</p>",
        "operationId": "putDailyPlanCodes",
        "parameters": [
          {
            "name": "dailyPlanCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing daily plan codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyPlanCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch DailyPlanCodes.",
        "description": " <p><strong>OperationId:</strong>getDailyPlanCodes</p>",
        "operationId": "getDailyPlanCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching daily plan codes.",
            "schema": {
              "$ref": "#/definitions/dailyPlanCodes"
            }
          },
          "204": {
            "description": "DailyPlanCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/expenseArrangementCodes": {
      "put": {
        "summary": "Operation to change ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>putExpenseArrangementCodes</p>",
        "operationId": "putExpenseArrangementCodes",
        "parameters": [
          {
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing expense arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>postExpenseArrangementCodes</p>",
        "operationId": "postExpenseArrangementCodes",
        "parameters": [
          {
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new expense arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>getExpenseArrangementCodes</p>",
        "operationId": "getExpenseArrangementCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching expense arrangement codes.",
            "schema": {
              "$ref": "#/definitions/expenseArrangementCodes"
            }
          },
          "204": {
            "description": "ExpenseArrangementCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>deleteExpenseArrangementCodes</p>",
        "operationId": "deleteExpenseArrangementCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/fiscalFolioParameters": {
      "put": {
        "summary": "Operation to change FiscalFolioParameters.",
        "description": "Operation to change Fiscal Folio Parameters. <p><strong>OperationId:</strong>putFiscalFolioParameters</p>",
        "operationId": "putFiscalFolioParameters",
        "parameters": [
          {
            "name": "fiscalFolioParameters",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Fiscal Folio Parameter Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioParameters"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FiscalFolioParameters.",
        "description": "Operation to fetch Fiscal Folio Parameters. <p><strong>OperationId:</strong>getFiscalFolioParameters</p>",
        "operationId": "getFiscalFolioParameters",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "internal",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data. Set this true to see the standard Fiscal Folio Parameters that are seeded along with the manually created Fiscal Folio Parameters.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Fiscal Folio Parameter configurations.",
            "schema": {
              "$ref": "#/definitions/fiscalFolioParameters"
            }
          },
          "204": {
            "description": "FiscalFolioParameters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FiscalFolioParameters.",
        "description": "Operation to remove Fiscal Folio Parameters. <p><strong>OperationId:</strong>deleteFiscalFolioParameters</p>",
        "operationId": "deleteFiscalFolioParameters",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of the Hotel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "partner",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Fiscal folio parameter associated with Partner.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of the Fiscal Folio Parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/folioTypeLegendMappings": {
      "get": {
        "summary": "Operation to fetch folio type legend mappings config.",
        "description": "Operation to fetch folio type legend mappings config. <p><strong>OperationId:</strong>getFolioTypeLegendMappingsConfig</p>",
        "operationId": "getFolioTypeLegendMappingsConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Property associated with folio type legend mapping",
            "type": "string"
          },
          {
            "name": "legendCode",
            "in": "query",
            "required": true,
            "description": "Legend code to which folio types attached.",
            "type": "string"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio type to be searched.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch folio type legend mapping.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingsConfigDetails"
            }
          },
          "204": {
            "description": "FolioTypeLegendMappingsConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create folio type legend mappings config.",
        "description": "Operation to create folio type legend mappings config. <p><strong>OperationId:</strong>postFolioTypeLegendMappingConfig</p>",
        "operationId": "postFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "folioTypeLegendMappingConfigCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to create folio type legend mapping information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change folio type legend mappings config.",
        "description": "Operation to change folio type legend mappings config. <p><strong>OperationId:</strong>changeFolioTypeLegendMappingConfig</p>",
        "operationId": "changeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "folioTypeLegendMappingConfigToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object to edit folio type legend mapping information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingConfigStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelAdjustmentCodes": {
      "put": {
        "summary": "Operation to change AdjustmentCodes.",
        "description": "Operation to change Adjustment Codes. <p><strong>OperationId:</strong>putAdjustmentCodes</p>",
        "operationId": "putAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Adjustment Code Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AdjustmentCodes.",
        "description": "Operation to create Adjustment Codes. <p><strong>OperationId:</strong>postAdjustmentCodes</p>",
        "operationId": "postAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Adjustment Code Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch AdjustmentCodes.",
        "description": "Operation to fetch Adjustment Codes. <p><strong>OperationId:</strong>getAdjustmentCodes</p>",
        "operationId": "getAdjustmentCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "adjustmentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Adjustment Code configurations.",
            "schema": {
              "$ref": "#/definitions/adjustmentCodes"
            }
          },
          "204": {
            "description": "AdjustmentCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AdjustmentCodes.",
        "description": "Operation to remove Adjustment Codes. <p><strong>OperationId:</strong>deleteAdjustmentCodes</p>",
        "operationId": "deleteAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCode",
            "in": "query",
            "required": false,
            "description": "Configuration code.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelTaxTypes": {
      "get": {
        "summary": "Operation to fetch TaxTypes.",
        "description": "Operation to fetch Tax Types. <p><strong>OperationId:</strong>getTaxTypes</p>",
        "operationId": "getTaxTypes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "taxTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Tax Type configurations.",
            "schema": {
              "$ref": "#/definitions/taxTypes"
            }
          },
          "204": {
            "description": "TaxTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/commissionCode/{commissionCode}": {
      "get": {
        "summary": "Operation to fetch commission code.",
        "description": " <p><strong>OperationId:</strong>getCommissionCode</p>",
        "operationId": "getCommissionCode",
        "parameters": [
          {
            "name": "commissionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Commission Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching commission code details.",
            "schema": {
              "$ref": "#/definitions/commissionCodeDetail"
            }
          },
          "204": {
            "description": "CommissionCode not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/hotels/{hotelId}/compTypes": {
      "get": {
        "summary": "Operation to Fetch Comp Types.",
        "description": "Operation to Fetch Comp TYpes. <p><strong>OperationId:</strong>getCompTypes</p>",
        "operationId": "getCompTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "name": "compTypeCode",
            "in": "query",
            "required": false,
            "description": "Code is used to identify the CompType.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Comp Types.",
            "schema": {
              "$ref": "#/definitions/compTypesDetails"
            }
          },
          "204": {
            "description": "CompTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/exchangeRates/{currencyCode}": {
      "get": {
        "summary": "Operation to fetch FuturePastExchangeRates.",
        "description": "Operation to Fetch Future Past Exchange Rates. <p><strong>OperationId:</strong>getFuturePastExchangeRates</p>",
        "operationId": "getFuturePastExchangeRates",
        "parameters": [
          {
            "name": "currencyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Currency Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "exchangeTypes",
            "in": "query",
            "enum": [
              "Cash",
              "Settlement",
              "Posting",
              "Check",
              "TACommission",
              "Membership",
              "Certificate"
            ],
            "x-example": "Cash",
            "required": true,
            "type": "string",
            "description": "E-certificate conversion.",
            "uniqueItems": true
          },
          {
            "name": "dateRangeStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateRangeEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/futurePastExchangeRates"
            }
          },
          "204": {
            "description": "FuturePastExchangeRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/folios/{folioType}/legends/{legendCode}": {
      "delete": {
        "summary": "Operation to remove folio type legend mappings config.",
        "description": "Operation to remove folio type legend mappings config. <p><strong>OperationId:</strong>removeFolioTypeLegendMappingConfig</p>",
        "operationId": "removeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "legendCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Legend Code"
          },
          {
            "name": "folioType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Folio Type"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/services/commissionConfig/cache": {
      "delete": {
        "summary": "Operation to clear cache.",
        "description": " <p><strong>OperationId:</strong>deleteCommisionConfigServicesCache</p>",
        "operationId": "deleteCommisionConfigServicesCache",
        "parameters": [
          {
            "name": "operaClearInput",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Request object for cleaning WS cache input type"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/services/commissionConfig/status": {
      "get": {
        "summary": "Operation to ping.",
        "description": " <p><strong>OperationId:</strong>pingCommisionConfigServices</p>",
        "operationId": "pingCommisionConfigServices",
        "parameters": [
          {
            "name": "operaPingInput",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Opera Ping request input type"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Ping operation.",
            "schema": {
              "$ref": "#/definitions/operaVersion"
            }
          },
          "204": {
            "description": "pingCommisionConfigServices not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/stopProcessingReasons": {
      "get": {
        "summary": "Operation to fetch stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>getStopProcessingReasons</p>",
        "operationId": "getStopProcessingReasons",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            }
          },
          "204": {
            "description": "StopProcessingReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>putStopProcessingReasons</p>",
        "operationId": "putStopProcessingReasons",
        "parameters": [
          {
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "description": "Request object for changing Stop Processing Reason.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for changing Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>postStopProcessingReasons</p>",
        "operationId": "postStopProcessingReasons",
        "parameters": [
          {
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "description": "Request object for creating Stop Processing Reason",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>deleteStopProcessingReasons</p>",
        "operationId": "deleteStopProcessingReasons",
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "articles": {
      "type": "object",
      "description": "Request to change articles.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the articles.",
          "$ref": "#/definitions/codeType"
        },
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "articlesType": {
      "type": "array",
      "description": "Holds collection of articles.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/articleInfoType"
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "articlesInfo": {
      "type": "object",
      "properties": {
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRules": {
      "type": "object",
      "properties": {
        "authorizationConfigRulesType": {
          "description": "Authorization configuration rule type.",
          "$ref": "#/definitions/authorizationConfigRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRulesType": {
      "type": "array",
      "description": "List of AuthorizationRuleType.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizationConfigRuleType"
      }
    },
    "authorizationConfigRuleType": {
      "type": "object",
      "description": "Authorization configuration Rule Type.Authorization Rules specify the rule (or rules) that the property uses for credit card authorizations",
      "properties": {
        "hotelId": {
          "description": "Property associated with authorization rule",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Authorization rule Room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "description": "Authorization rule room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "sourceCode": {
          "description": "Authorization rule source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "rateCategory": {
          "description": "Authorization rule Rate Category code.",
          "$ref": "#/definitions/rateCategoryType"
        },
        "rateCode": {
          "description": "Rate code associated to this rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guaranteeCode": {
          "description": "Guarantee code associated to this rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ruleNo": {
          "description": "Rule Number for current authorization.",
          "type": "integer"
        },
        "ruleDescription": {
          "description": "Rule Number description for current authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "amount": {
          "description": "Amount to be applied to all rules with an amount configured in the formula.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "Percentage to be applied to all rules with a percentage configured in the formula.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "maxDaysToAuthorize": {
          "description": "A maximum of two digits to set the number of days to authorize for a credit card. If the field is left blank, authorizations will be done for the entire stay duration of the reservation",
          "type": "integer"
        },
        "ignoreDepositsYN": {
          "description": "Ignore deposits paid for calculation of the amount to be authorized.",
          "type": "boolean"
        }
      }
    },
    "roomClassCodeInfoType": {
      "type": "object",
      "description": "Code of the room class type.",
      "properties": {
        "roomClassCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "sourceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "rateCategoryType": {
      "type": "object",
      "description": "This type represents the rate category type.",
      "properties": {
        "rateCategoryDetails": {
          "description": "Begin date for the rate category.",
          "type": "object",
          "properties": {
            "beginDate": {
              "description": "Begin date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "description": "End date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "description": "Description of rate category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "rateClass": {
              "description": "Active date of the room category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "sellSequence": {
              "description": "Indicates rate category sell sequence.",
              "type": "number"
            }
          }
        },
        "rateCategory": {
          "description": "Rate category Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerGroupsToChange": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizerGroupsCriteriaType": {
      "type": "object",
      "description": "Criteria to change authorizer group.",
      "properties": {
        "updateAuthorizers": {
          "description": "If true, updates all authorizers in the group.",
          "type": "boolean"
        },
        "authorizerGroups": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsType"
        }
      }
    },
    "authorizerGroupsType": {
      "type": "array",
      "description": "Authorizer Group",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerGroupType"
      }
    },
    "authorizerGroupType": {
      "type": "object",
      "description": "A representation of the information contained by a Authorizer Group.",
      "properties": {
        "description": {
          "description": "Description of the Authorizer Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rateCode": {
          "description": "Rate Code of the Authorizer Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionLimits": {
          "description": "Transactions information of the Authorizer Group.",
          "$ref": "#/definitions/authorizerTrxLimitsType"
        },
        "hotelId": {
          "description": "Hotel Code to which the Authorizer Group belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Authorizer Group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerTrxLimitsType": {
      "type": "array",
      "description": "Set of Transaction Limit configured for the Authorizer Group.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerTrxLimitType"
      }
    },
    "authorizerTrxLimitType": {
      "type": "object",
      "description": "A representation of the information of Transaction Limit.",
      "properties": {
        "transactionCodes": {
          "description": "Set of Transaction Codes configured for the Authorizer Group.",
          "$ref": "#/definitions/authTransactionCodesType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured for the Authorizer Group.",
          "$ref": "#/definitions/authBillingInstructionsType"
        },
        "groupHeaderId": {
          "description": "Group Header Id for a transaction row.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Credit Limit for a transaction.",
          "type": "number"
        },
        "occurrenceLimit": {
          "description": "Occurrence Limit for a transaction.",
          "type": "number"
        }
      }
    },
    "authTransactionCodesType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "authBillingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "authorizerGroups": {
      "type": "object",
      "properties": {
        "authorizerGroups": {
          "description": "Collection of Authorizer Groups fetched.",
          "$ref": "#/definitions/authorizerGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Collection of Auto Folio Settlement Types.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesType": {
      "type": "array",
      "description": "List of Auto Folio Settlement Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoFolioSettlementTypeType"
      }
    },
    "autoFolioSettlementTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "autoFolioSettlementTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be created.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be changed.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashiersDetails": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "Lists of cashiers and their information.",
          "$ref": "#/definitions/cashiersType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashiersType": {
      "type": "array",
      "description": "Details about a cashier.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierType"
      }
    },
    "cashierType": {
      "type": "object",
      "description": "Cashiers Information.",
      "properties": {
        "cashierId": {
          "description": "Numeric code for cashier ID.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The currency code used by the hotel that the cashier belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name assigned to the cashier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "attachedUser": {
          "description": "User(s) assigned to the cashier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "cashierType": {
          "description": "Cashier / Interface Cashier / LDAP Template options are provided.",
          "$ref": "#/definitions/cashierTypeType"
        },
        "startingAmount": {
          "description": "The Starting Amount in the Cashier drawer.",
          "type": "number"
        },
        "floatOverShort": {
          "description": "Selected if the cashier is allowed to drop below or above the required drop amount.",
          "type": "boolean"
        },
        "usageInfo": {
          "description": "Information about how the cashier is used.",
          "type": "object",
          "properties": {
            "maximumDailyUses": {
              "description": "The Maximum Daily Uses for the cashier.",
              "type": "integer"
            },
            "history": {
              "description": "Statistics about the use of the cashier.",
              "type": "object",
              "properties": {
                "lastOpened": {
                  "description": "The date that the cashier last opened.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "timesOpened": {
                  "description": "The number of times the cashier has opened their account today.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "kiosk": {
          "description": "Indicator that this cashier is the one to be used by Kiosk Partner to carry out postings and payments for the guest.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicator that tells whether the cashier is active or not.",
          "type": "boolean"
        },
        "open": {
          "description": "Indicator that tells whether the cashier is open or not.",
          "type": "boolean"
        }
      }
    },
    "cashierTypeType": {
      "type": "string",
      "description": "The types of cashier.",
      "enum": [
        "Cashier",
        "InterfaceCashier",
        "LDAPTemplate"
      ]
    },
    "cashiers": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "List of cashiers to be modified.",
          "$ref": "#/definitions/cashiersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierNumber": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierId": {
      "type": "number",
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
    },
    "commissionCodesSummary": {
      "type": "object",
      "description": "Response object for fetching commission codes.",
      "properties": {
        "commissionCodesSummary": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodesSummaryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesSummaryType": {
      "type": "array",
      "description": "Commission code details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeSummaryInfoType"
      }
    },
    "commissionCodeSummaryInfoType": {
      "type": "object",
      "description": "Commission codes summary details.",
      "properties": {
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code details.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "basedOn": {
          "description": "Commission based on information.",
          "$ref": "#/definitions/commissionBasedOnType"
        },
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "commissionBasedOnType": {
      "type": "string",
      "description": "Commission based on Revenue.",
      "enum": [
        "Reservation",
        "Revenue"
      ]
    },
    "commissionCodes": {
      "type": "object",
      "description": "Request object to update commission codes.",
      "properties": {
        "commissionCodes": {
          "description": "Commission codes information to update.",
          "$ref": "#/definitions/commissionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesType": {
      "type": "array",
      "description": "Commission code details object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeInfoType"
      }
    },
    "commissionCodeInfoType": {
      "type": "object",
      "description": "Commission code info.",
      "properties": {
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "commissionCodeHoldStatus": {
          "description": "Commission code hold status details.",
          "$ref": "#/definitions/commissionCodeHoldStatusType"
        },
        "reservationHistoryRecords": {
          "description": "Commission paid manually details.",
          "$ref": "#/definitions/commissionPaidDetailsType"
        },
        "commissionCalculation": {
          "description": "Commission calculation type based on details.",
          "$ref": "#/definitions/commissionCalculationType"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        }
      }
    },
    "commissionCodeHoldStatusType": {
      "type": "object",
      "description": "Commission Code Hold Status type",
      "properties": {
        "holdAlways": {
          "description": "Hold always status for commission code.",
          "type": "boolean"
        },
        "holdPrepaid": {
          "description": "Hold prepaid status for commission code.",
          "type": "boolean"
        },
        "holdAccountReceivables": {
          "description": "Hold accoutn receivables status for commission code.",
          "type": "boolean"
        }
      }
    },
    "commissionPaidDetailsType": {
      "type": "object",
      "description": "Commission paid details.",
      "properties": {
        "perNight": {
          "type": "boolean"
        },
        "perStay": {
          "type": "boolean"
        },
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "weekEndCommissionAmount": {
          "description": "Commission amount that needs to be paid over weekend.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionType": {
          "description": "Indicates the type of commission paid to agent.",
          "type": "string",
          "minLength": 1,
          "maxLength": 1
        }
      }
    },
    "commissionCalculationType": {
      "type": "object",
      "description": "Commission calculation type based on details.",
      "properties": {
        "revenueBasedCommission": {
          "$ref": "#/definitions/revenueBasedCommissionType"
        },
        "reservationBasedCommission": {
          "$ref": "#/definitions/reservationBasedCommissionType"
        }
      }
    },
    "revenueBasedCommissionType": {
      "type": "array",
      "description": "Revenue based commission details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeTransactionType"
      }
    },
    "commissionCodeTransactionType": {
      "type": "object",
      "description": "Revenue based commission details.",
      "properties": {
        "transactionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodeDesc": {
          "type": "string",
          "maxLength": 2000
        },
        "basedOnNetAmount": {
          "type": "boolean"
        },
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        }
      }
    },
    "reservationBasedCommissionType": {
      "type": "object",
      "description": "Reservation based commission details.",
      "properties": {
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        }
      }
    },
    "compTypesCriteria": {
      "type": "object",
      "description": "Request object for creating CompTypes.",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be created.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesType": {
      "type": "array",
      "description": "List of Comp Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/compTypeType"
      }
    },
    "compTypeType": {
      "type": "object",
      "description": "Information representation of Comp Type.",
      "properties": {
        "compTypeCode": {
          "description": "Code is used to identify the CompType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTypeDescription": {
          "description": "Text is used to describe the CompType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayOrder": {
          "description": "Comp Type record sequence number.",
          "type": "number"
        }
      }
    },
    "compTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Comp Types.",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be changed.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesStatus": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bankAccountsInfo": {
      "type": "object",
      "description": "Response for fetching Bank Accounts",
      "properties": {
        "bankAccounts": {
          "description": "Collection of Bank Accounts",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configBankAccountsType": {
      "type": "array",
      "description": "List of bank accounts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configBankAccountType"
      }
    },
    "configBankAccountType": {
      "type": "object",
      "description": "Indentifier for a Bank Account.",
      "properties": {
        "hotelId": {
          "description": "Property of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Bank account ID.",
          "type": "number"
        },
        "bankAccountNumber": {
          "description": "Account number at the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "bankCode": {
          "description": "Unique code of the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "branchCode": {
          "description": "Code for the branch of the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankName": {
          "description": "Name of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingNumber": {
          "description": "Routing number for the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionConfigPaymentMethodType"
        },
        "format": {
          "description": "Type of format for Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "lastExportDate": {
          "description": "Used to hold last exported date for commission export.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastExportFileNo": {
          "description": "Used to hold last exported filename for commission export.",
          "type": "integer"
        },
        "nextCheckNumber": {
          "description": "Next check number used by commission handling module for bank account selected.",
          "type": "number"
        },
        "minProcessingAmount": {
          "description": "Minimum amount required to produce a check through commission processing for the selected account.",
          "type": "number"
        },
        "currency": {
          "description": "Currency associated with the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "checkStubLines": {
          "description": "Number of lines to be printed on check stub.",
          "type": "number"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "sourceImportDirectory": {
          "description": "Source directory for importing commission information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "targetImportDirectory": {
          "description": "Target directory where import files will be stored.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "editCheckNumber": {
          "description": "Check number allowed to be edited true/false.",
          "type": "boolean"
        },
        "validateIATANumber": {
          "description": "Force validation of TA/Source IATA number during commision payment process.",
          "type": "boolean"
        },
        "default": {
          "description": "Default Bank Account for that resort.",
          "type": "boolean"
        },
        "defaultForCurrency": {
          "description": "Used mainly to figure out default bank for resort and currency combination.",
          "type": "boolean"
        },
        "positivePayExport": {
          "description": "Indicate that the bank account uses Positive Pay Export.",
          "type": "boolean"
        },
        "report1099": {
          "description": "Indicates that bank account uses 1099 report.",
          "type": "boolean"
        }
      }
    },
    "commissionConfigPaymentMethodType": {
      "type": "string",
      "description": "This value of the enum is used for Payment methods",
      "enum": [
        "Check",
        "CentrallyPaid",
        "Eft"
      ]
    },
    "bankAccounts": {
      "type": "object",
      "description": "Request object to edit Bank Accounts",
      "properties": {
        "bankAccounts": {
          "description": "Details of the Bank Accounts to edit",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "updateDefault": {
          "description": "Update default confirmation response",
          "type": "boolean"
        },
        "updateDefaultForCurrency": {
          "description": "Update default for currency confirmation response",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardInfo": {
      "type": "object",
      "properties": {
        "creditCard": {
          "description": "Credit card information.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "currencyExchangeServiceTaxes": {
      "type": "object",
      "properties": {
        "currencyExchangeServiceTaxes": {
          "$ref": "#/definitions/currencyExchangeServiceTaxesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeServiceTaxesType": {
      "type": "array",
      "description": "List of currency exchange service taxes",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyExchangeServiceTaxType"
      }
    },
    "currencyExchangeServiceTaxType": {
      "type": "object",
      "description": "Currency exchange service tax identification details",
      "properties": {
        "hotel": {
          "description": "Property associated with currency exchange service tax",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Currency exchange service tax code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amountFrom": {
          "description": "Starting value of exchange equivalent range",
          "type": "number"
        },
        "amountTo": {
          "description": "End value of exchange equivalent range",
          "type": "number"
        },
        "percentage": {
          "description": "Percentage of local currency",
          "type": "number"
        },
        "minServiceTax": {
          "description": "Minimum service tax to be collected",
          "type": "number"
        },
        "maxServiceTax": {
          "description": "Maximimum service tax to be collected",
          "type": "number"
        },
        "baseAmount": {
          "description": "Base tax basis of local currency. This is normally configured to the resulting tax basis of the previous tax slab range.",
          "type": "number"
        }
      }
    },
    "customTaxTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Collection of Custom Tax Types.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesType": {
      "type": "array",
      "description": "List of Custom Tax Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customTaxTypeType"
      }
    },
    "customTaxTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "customTaxTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be created.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be changed.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyPlanCodes": {
      "type": "object",
      "properties": {
        "dailyPlanCodes": {
          "description": "Collection of daily plan codes.",
          "$ref": "#/definitions/dailyPlanCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyPlanCodesType": {
      "type": "array",
      "description": "Details for daily plan code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyPlanCodeType"
      }
    },
    "dailyPlanCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string",
          "maxLength": 2000
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "expenseArrangementCodes": {
      "type": "object",
      "properties": {
        "expenseArrangementCodes": {
          "description": "Collection of expense arrangement codes.",
          "$ref": "#/definitions/expenseArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "expenseArrangementCodesType": {
      "type": "array",
      "description": "Details for expense arrangement code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/expenseArrangementCodeType"
      }
    },
    "expenseArrangementCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string",
          "maxLength": 2000
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "fiscalFolioParameters": {
      "type": "object",
      "properties": {
        "fiscalFolioParameters": {
          "description": "Collection of Fiscal Folio Parameter configurations.",
          "$ref": "#/definitions/fiscalFolioParametersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioParametersType": {
      "type": "array",
      "description": "Holds Fiscal Folio Parameter details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalFolioParameterType"
      }
    },
    "fiscalFolioParameterType": {
      "type": "object",
      "description": "Provides information about the Fiscal Folio Parameter.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "partner": {
          "description": "Fiscal folio parameter associated with Partner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "code": {
          "description": "Code of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "description": {
          "description": "Description of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Parameter value of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data.",
          "type": "boolean"
        }
      }
    },
    "folioTypeLegendMappingsConfigDetails": {
      "type": "object",
      "description": "Response object for fetch folio type legend mapping.",
      "properties": {
        "legends": {
          "$ref": "#/definitions/folioTypeLegendMappingsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingsConfigType": {
      "type": "array",
      "description": "Details about folio type legened mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioTypeLegendMappingConfigType"
      }
    },
    "folioTypeLegendMappingConfigType": {
      "type": "object",
      "description": "Folio type legened mapping information.",
      "properties": {
        "hotelId": {
          "description": "Property associated with folio type legend mapping",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "legendCode": {
          "description": "Legend code to which folio types attached.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioType": {
          "description": "Folio type attached to the legend.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioTypeDescription": {
          "description": "Folio type description attached to the legend.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "folioTypeLegendMappingConfigCriteria": {
      "type": "object",
      "description": "Request object to create folio type legend mapping information.",
      "properties": {
        "criteria": {
          "description": "Criteria to create folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigToBeChanged": {
      "type": "object",
      "description": "Request object to edit folio type legend mapping information.",
      "properties": {
        "criteria": {
          "description": "Criteria to edit folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigStatus": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "adjustmentCodes": {
      "type": "object",
      "properties": {
        "adjustmentCodes": {
          "description": "Collection of Adjustment Code configurations.",
          "$ref": "#/definitions/adjustmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "adjustmentCodesType": {
      "type": "array",
      "description": "Holds Adjustment Code details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/adjustmentCodeType"
      }
    },
    "adjustmentCodeType": {
      "type": "object",
      "description": "Provides information about Adjustment Codes.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Adjustment Reason Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "codeType": {
          "description": "Correction type. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
          "$ref": "#/definitions/adjustmentReasonCodeType"
        },
        "description": {
          "description": "Adjustment Reason Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amount": {
          "description": "Amount or Percentage Value for Adjustment Code",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bIRGuest": {
          "description": "BIR Guest Type in Adjustment Codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountOrPercentageFlag": {
          "description": "Adjustment Code Calculation Type, valid values are Amount and Percentage.",
          "$ref": "#/definitions/amountOrPercentage"
        }
      }
    },
    "adjustmentReasonCodeType": {
      "type": "string",
      "description": "Defines values for Adjustment reason codes. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
      "enum": [
        "Adjustment",
        "Correction",
        "Deletion",
        "ServiceRecovery",
        "CreditBill"
      ]
    },
    "amountOrPercentage": {
      "type": "string",
      "description": "Adjustment Code calculation type based on details.",
      "enum": [
        "Amount",
        "Percent"
      ]
    },
    "taxTypes": {
      "type": "object",
      "properties": {
        "taxTypes": {
          "description": "Collection of Tax Type configurations.",
          "$ref": "#/definitions/taxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypesType": {
      "type": "array",
      "description": "Holds Tax Type details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxTypeType"
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "commissionCodeDetail": {
      "type": "object",
      "description": "Response object for fetching commission code details.",
      "properties": {
        "commissionCodeDetail": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodeDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodeDetailType": {
      "type": "object",
      "description": "Commission code detail.",
      "properties": {
        "commissionCodeInfo": {
          "description": "Commission code details.",
          "$ref": "#/definitions/commissionCodeInfoType"
        }
      }
    },
    "compTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Comp Types.",
      "properties": {
        "compTypes": {
          "description": "Collection of Comp Types.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "futurePastExchangeRates": {
      "type": "array",
      "description": "Collection of exchange rates and their information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeRateType"
      }
    },
    "exchangeRateType": {
      "type": "object",
      "description": "Exchange rate configuration type.",
      "properties": {
        "hotelId": {
          "description": "Property where exchange rate is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currencyExchangeType"
          }
        },
        "currency": {
          "description": "Currency code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "baseCurrency": {
          "description": "Exchange rate base currency.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "beginDate": {
          "description": "Date on which the rate is to become active.",
          "type": "string",
          "format": "date-time"
        },
        "buyRate": {
          "description": "Buy Rate for foreign currency.",
          "type": "number"
        },
        "buyCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency buy operation.",
          "type": "number"
        },
        "sellRate": {
          "description": "Sell Rate for foreign currency.",
          "type": "number"
        },
        "sellCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency sell operation.",
          "type": "number"
        },
        "comment": {
          "description": "Comments associated with the exchange rate.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "Status past, present, or future.",
          "$ref": "#/definitions/statusTypes"
        }
      }
    },
    "currencyExchangeType": {
      "type": "string",
      "description": "E-certificate conversion.",
      "enum": [
        "Cash",
        "Settlement",
        "Posting",
        "Check",
        "TACommission",
        "Membership",
        "Certificate"
      ]
    },
    "statusTypes": {
      "type": "string",
      "description": "Defines status in terms of time.",
      "enum": [
        "Future",
        "Current",
        "Past"
      ]
    },
    "operaVersion": {
      "type": "object",
      "description": "Response for Ping operation.",
      "properties": {
        "operaVersion": {
          "description": "Opera version number.",
          "$ref": "#/definitions/operaVersionNumberType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaVersionNumberType": {
      "type": "string",
      "description": "Current Opera Version Number",
      "minLength": 0,
      "maxLength": 40
    },
    "stopProcessingReasons": {
      "type": "object",
      "description": "Response object for fetching Stop Processing Reason.",
      "properties": {
        "stopProcessingReasons": {
          "description": "Collection of Stop Processing Reasons.",
          "$ref": "#/definitions/stopProcessingReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stopProcessingReasonsType": {
      "type": "array",
      "description": "List of the Stop Processing Reasons to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stopProcessingReasonType"
      }
    },
    "stopProcessingReasonType": {
      "type": "object",
      "description": "Details for Stop Processing Reason.",
      "properties": {
        "code": {
          "description": "Code is used to identify a Stop Processing Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Stop Processing Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displaySequence": {
          "description": "Stop Processing Reason display sequence Number.",
          "type": "number"
        }
      }
    }
  },
  "tags": [
    {
      "name": "CashieringConfig",
      "description": "Cashiering configurations affect the control and management of financial transactions at your property. You can configure cashiering components for articles for sale, cancellation handling, deposits, folios, settlements, exchange rates, payment methods and so on."
    },
    {
      "name": "CreditCard",
      "description": "The Credit Card Internal Service contains operations used internally by OPERA Cloud."
    },
    {
      "name": "CommissionConfig",
      "description": "These Commission APIs allow you to get, update, and remove commissions on an Account Receivable (AR) profile in OPERA Cloud."
    },
    {
      "name": "ChainConfig",
      "description": "These APIs will allow you to configure front office related configuration related to Administration."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}